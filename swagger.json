swagger: '2.0'
info:
  description: >-
    This is a sample server interactioncustomer server.  You can find out more
    about     Swagger at [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](hhttp://swagger.io/irc/).      For this sample,
    you can use the api key `special-key` to test the authorization     filters.
  version: 1.0.0 
  title: 'Maxar Ruamitr '
  termsOfService: 'http://google.com'
  contact:
    email: kamalas@terrabit.co.th
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: maxar.ruamitr
basePath: /api/v1
tags:
  - name: interaction
    description: interaction that occured when customer contact to Ruamitr
    externalDocs:
      description: More info
      url: 'http:/google.com'
  - name: customer
    description: Access to customer Information
  - name: case
    description: 'Rest taht reltaed to case Create/Edit Case '
  - name: user
    description: Access Method that related to user such Add/Edit/Delete
  - name: knowledgeBase
    description: | 
      Access Knowledge Information 
      update on 19/03/2019 by Kamalas 
        Star Content, cut meta data
  - name: setting
    description: Access Setting value of Ruamitr
schemes:
  - https
  - http
paths:
  /interaction:
    get:
      tags:
        - interaction
      summary: Finds interactions by parameter
      description: 'Multiple values can be provided with comma eg. staus=open,new'
      operationId: findinteraction
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
          enum:
            - incoming
            - in-progress
            - pending
            - closed
            - all
          default: incoming
        - name: state
          in: query
          description: Status values that need to be considered for filter

          type: string
          enum:
            - waiting
            - draft
            - sending
            - ignore
            - all
          default: all
        - in: query
          name: q
          type: string
          description: >-
            Query string when search using keyword againest Subject and Body eg.
            "Somchai Rod"+Complain match contain "Somchai Rod" and Compalin
        - in: query
          name: subject
          type: string
          description: >-
            Search within Subject field eg. "Somchai Rod"+Complain match contain
            "Somchai Rod" and Sale
        - in: query
          name: content
          type: string
          description: >-
            Search within Email Body or Chat log eg. "Somchai Rod"+Complain
            match contain "Somchai Rod" and Sale (Has the Word)
        - in: query
          name: contactNo
          type: string
          description: >-
            Phone number /Eamil Address / Line Id /Facebook ID
        - in: query
          name: accountId
          type: string
          description: Interaction Account that active in Ruamitr
          enum:
          - 1
          - 2
          - 3 
          - 4
        - in: query
          name: offset
          type: integer
          description: >-
            The number of items to skip before starting to collect the result
            set.
        - in: query
          name: flag
          type: boolean
          description: identify that interaction has mark as flag
        - in: query
          name: attach
          type: boolean
          description: identify that interation has attachment file
        - in: query
          name: channelCode
          type: string
          enum:
            - email
            - facebook
            - line
          description: flag to identify that interation has attachment file
        - in: query
          name: contactDate
          type: string
          description: 'Start Date using JSON Datetime Format eg. 2013-10-21T13:28:06.419Z'
        - in: query
          name: withinContactDate
          type: string
          description: >-
            the format will be number + Character D,M,Y such as 3D 6M 1Y for
            search record for last 3 Day, 6 Month, 1 Year
        - in: query
          name: contactDirection
          type: string
          description: IN or OUT    
        - in: query
          name: size
          type: string
          description: 'Size of Attachemen file in pattern size=1M, size=gt100K,size=lte20M'
        - name: sort
          in: query
          description: Status values that need to be considered for filter
          type: string
          enum:
            - 'date:asc'
            - 'date:desc'
            - 'priority:asc'
            - 'priority:desc'
          default: 'date:desc'
        - name: scope
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
          enum:
            - user
            - team
            - all
          default: inbox
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/InteractionInfoList'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
    post:
      tags:
        - interaction
      summary: Add a new interaction to the customer
      description: ''
      operationId: addinteraction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            type: object
            properties:
              customerId:
                type: string
                format: uuid
                example: 0b43ef1e-249e-11e9-ab14-d663bd873d93
              customerContactId:
                type: string
                format: uuid
                example: 0b4331e-249e-11e9-ab14-d663bd873d93
              contactNo:
                type: string
                format: uuid
                example: 0891172179
              channelCode:
                type: string
                format: uuid
                example: 0891172179
          
      responses:
        '405':
          description: Invalid input
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
      deprecated: true
    put:
      tags:
        - interaction
      summary: Update an existing interaction
      description: ''
      operationId: updateinteraction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            $ref: '#/definitions/interactionEmail'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
        '405':
          description: Validation exception
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /interaction/create:
    post:
      tags:
        - interaction
      summary: Create new interaction to the customer by using (ContactNo/Channel) or Customer Contact ID
      description: ''
      operationId: createinteraction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            type: object
            properties:
              customerId:
                type: string
                format: uuid
                example: 0b43ef1e-249e-11e9-ab14-d663bd873d93
              customerContactId:
                type: string
                format: uuid
                example: 0b4331e-249e-11e9-ab14-d663bd873d93
              contactNo:
                type: string
                format: uuid
                example: 0891172179
              channelCode:
                type: string
                example: PHONE
 
      responses:
        '405':
          description: Invalid input
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /interaction/count-record-by-state:
    get:
      tags:
        - interaction
      summary: Count Number of record in each state base on criteria
      description: Multiple status values can be provided with comma separated strings
      operationId: findinteractionsByStatus
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
          enum:
            - incoming
            - in-progress
            - pending
            - closed
          default: incoming
        - name: state
          in: query
          description: Status values that need to be considered for filter
          type: string
          enum:
            - waiting
            - draft
            - sending
            - ignore
            - all
          default: all
        - in: query
          name: q
          type: string
          description: >-
            Query string when search using keyword againest Subject and Body eg.
            "Somchai Rod"+Complain match contain "Somchai Rod" and Compalin
        - in: query
          name: subject
          type: string
          description: >-
            Search within Subject field eg. "Somchai Rod"+Complain match contain
            "Somchai Rod" and Sale
        - in: query
          name: content
          type: string
          description: >-
            Search within Email Body or Chat log eg. "Somchai Rod"+Complain
            match contain "Somchai Rod" and Sale (Has the Word)
        - in: query
          name: contactNo
          type: string
          description: >-
            Phone number /Eamil Address / Line Id /Facebook ID
        - in: query
          name: accountId
          type: string
          description: Interaction Account that active in Ruamitr
          enum:
          - 1
          - 2
          - 3 
          - 4
        - in: query
          name: offset
          type: integer
          description: >-
            The number of items to skip before starting to collect the result
            set.
        - in: query
          name: flag
          type: boolean
          description: identify that interaction has mark as flag
        - in: query
          name: attach
          type: boolean
          description: identify that interation has attachment file
        - in: query
          name: channelCode
          type: string
          enum:
            - email
            - facebook
            - line
          description: flag to identify that interation has attachment file
        - in: query
          name: contactDate
          type: string
          description: 'Start Date using JSON Datetime Format eg. 2013-10-21T13:28:06.419Z'
        - in: query
          name: withinContactDate
          type: string
          description: >-
            the format will be number + Character D,M,Y such as 3D 6M 1Y for
            search record for last 3 Day, 6 Month, 1 Year
        - in: query
          name: contactDirection
          type: string
          description: IN or OUT     
        - in: query
          name: size
          type: string
          description: 'Size of Attachemen file in pattern size=1M, size=gt100K,size=lte20M'
        - name: sort
          in: query
          description: Status values that need to be considered for filter
          type: string
          enum:
            - 'date:asc'
            - 'date:desc'
            - 'priority:asc'
            - 'priority:desc'
          default: 'date:desc'
        - name: scope
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
          enum:
            - user
            - team
            - all
          default: inbox
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              properties:
                state:
                  type: string
                  enum:
                    - draft
                    - waiting
                    - sending
                    - Ignore
                    - all
                  example: waiting
                label:
                  type: string
                  example: Wait for Approve
                recordCount:
                  type: integer
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /interaction/findByTags:
    get:
      tags:
        - interaction
      summary: Finds interactions by tags
      description: >-
        Muliple tags can be provided with comma separated strings. Use        
        tag1, tag2, tag3 for testing.
      operationId: findinteractionsByTags
      produces:
        - application/json
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/interactionEmail'
        '400':
          description: Invalid tag value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
      deprecated: true
  '/interaction/{interactionId}':
    get:
      tags:
        - interaction
      summary: Get single interaction by  with Message Content by interaciton ID
      description: Returns a single interaction
      operationId: getinteractionById
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InteractionEmailInfo'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []
    post:
      tags:
        - interaction
      summary: Updates a interaction in the customer with form data
      description: ''
      operationId: updateinteractionWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the interaction
          required: false
          type: string
        - name: status
          in: formData
          description: Updated status of the interaction
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
    delete:
      tags:
        - interaction
      summary: Deletes a interaction
      description: ''
      operationId: deleteinteraction
      produces:
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: interactionId
          in: path
          description: interaction id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              response:
                $ref: '#/definitions/ResponseMessage'
              interaction:
                $ref: '#/definitions/InteractionEmailInfo'
          examples:
            JSON Response Chat:
              {  
                 "response":{  
                    "Message":"OK",
                    "ErrorMessage":""
                 },
                 "interaction":{  
                    "uuid":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "customerContactId":"39012046-8e55-11e8-9eb6-529269fb1459",
                    "contactRefNo":"123210",
                    "customerId":"390122bc-8e55-11e8-9eb6-529269fb1459",
                    "channelcode":"LINE",
                    "interActionAccountName":"ABCLine",
                    "interactionName":"Apichat Somjainuk",
                    "customertype":"Customer",
                    "customerClassify":"Single",
                    "interactionContactName":"@apichat",
                    "interationDirection":"IN",
                    "customerImage":"/customer/89302180321/profile.jpg",
                    "customerAbbr":"AS",
                    "customerAbbrColor":"#1ABC9C",
                    "hasAttachment":true,
                    "status":"Pending",
                    "state":"Wrap-up",
                    "stateDate":"2018-11-02T04:29:19.150",
                    "isRead":true,
                    "createDate":"2018-11-02T04:29:19.150",
                    "updateDate":"2018-11-02T04:29:19.150",
                    "interactionFlag":true,
                    "isReadOnly":true,
                    "assignTo":"Agent1",
                    "allowIgnore":false,
                    "isTransfer":false,
                    "tag":[  
                       {  
                          "name":"Completed",
                          "value":"Completed",
                          "description":"Contact Result Level 1 | contact Restul Level 2"
                       }
                    ],
                    "messageContent":[  
                       {  
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"Greeting Customer Support"
                       },
                       {  
                          "contactName":"@Apichat",
                          "direction":"OUT",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"May Can i help you ? "
                       },
                       {  
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"https://scontent.xx.fbcdn.net/v/t1.15752-9/43062495_302429593821265_4837130990688141312_n.jpg?_nc_cat=101&_nc_ad=z-m&_nc_cid=0&oh=538ab3166c1d5561d3488c2a7362256a&oe=5C235272"
                       },
                       {  
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"ERROR",
                          "type":"text",
                          "contactDate":null,
                          "text":"Please Wait..."
                       },
                       {  
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"SENDING",
                          "type":"text",
                          "contactDate":null,
                          "text":"Sorry for Please Wait..."
                       },
                       {  
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"OK",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "type":"attchment",
                          "attchment":[  
                             {  
                                "id":1,
                                "name":"aa.txt",
                                "uri":"/aaa-2081091.txt",
                                "size":"100 KB",
                                "extension":"txt"
                             }
                          ]
                       }
                    ]
                 }
              }
            JSON Response Email:
              {  
                 "response":{  
                    "Message":"OK",
                    "ErrorMessage":""
                 },
                 "interaction":{  
                    "id":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "customerContactId":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "contactRefNo":"C-20101928",
                    "customerId":"390122bc-8e55-11e8-9eb6-529269fb1459",
                    "channelCode":"EMAIL",
                    "interActionAccountName":"ABC Email ",
                    "interactionName":"Apichat Somjainuk",
                    "customerType":"Customer",
                    "customerClassify":"Single",
                    "interactionContactName":"Apichat@abc.com",
                    "interationDirection":"IN",
                    "customerImage":"http://maxar/3281093fdsjlkfds",
                    "customerAbbr":"AS",
                    "customerAbbrColor":"#1ABC9C",
                    "hasAttachment":true,
                    "status":"assign",
                    "state":"Wrap-up",
                    "stateDate":"2018-11-02T04:29:19.150",
                    "isRead":true,
                    "createDate":"2018-11-02T04:29:19.150",
                    "updateDate":"2018-11-02T04:29:19.150",
                    "interactionFlag":true,
                    "assignTo":"Agent1",
                    "isReadOnly":false,
                    "allowIgnore":false,
                    "tag":[  
                       {  
                          "name":"Transfer",
                          "description":"Agent Leave"
                       }
                    ],
                    "messageContent":[  
                       {  
                          "id":"832901830921",
                          "type":"IN",
                          "from":"nacho@outlook.com",
                          "to":"sale@abc.com",
                          "cc":"nacho@gmail.com",
                          "bcc":"user@example.com",
                          "subject":"Sale Order Inquiry",
                          "Content":"some html text",
                          "attachment":[  
                             {  
                                "id":1,
                                "name":"aa.txt",
                                "uri":"/aaa-2081091.txt",
                                "size":"100 KB",
                                "mimeType":"text/plain"
                             },
                             {  
                                "id":2,
                                "name":"Profile.jpg",
                                "uri":"/Profile-2081091.jpg",
                                "size":"1201 KB",
                                "mimeType":"image/jpeg"
                             }
                          ]
                       }
                    ]
                 }
              }
            JSON Response Post:
              {  
                 "response":{  
                    "Message":"OK",
                    "ErrorMessage":""
                 },
                 "interaction":{  
                    "uuid":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "customerContactId":"39012046-8e55-11e8-9eb6-529269fb1459",
                    "contactRefNo":"123210",
                    "customerId":"390122bc-8e55-11e8-9eb6-529269fb1459",
                    "channelcode":"FB",
                    "interActionAccountName":"ABC Fan Page",
                    "interactionName":"Apichat Somjainuk",
                    "customertype":"Customer",
                    "customerClassify":"Single",
                    "interactionContactName":"@apichat",
                    "interationDirection":"IN",
                    "customerImage":"/customer/89302180321/profile.jpg",
                    "customerAbbr":"AS",
                    "customerAbbrColor":"#1ABC9C",
                    "hasAttachment":true,
                    "status":"Pending",
                    "state":"Wrap-up",
                    "stateDate":"2018-11-02T04:29:19.150",
                    "isRead":true,
                    "createDate":"2018-11-02T04:29:19.150",
                    "updateDate":"2018-11-02T04:29:19.150",
                    "interactionFlag":true,
                    "isReadOnly":true,
                    "assignTo":"Agent1",
                    "allowIgnore":false,
                    "isTransfer":false,
                    "tag":[  
                       {  
                          "name":"Completed",
                          "value":"Completed",
                          "description":"Contact Result Level 1 | contact Restul Level 2"
                       }
                    ],
                    "messageContent":[  
                       {  
                          "messagId":"123890",
                          "contactNo":"12390-321",
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"Greeting Customer Support",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@Apichat",
                          "direction":"OUT",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"May Can i help you ? ",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"https://scontent.xx.fbcdn.net/v/t1.15752-9/43062495_302429593821265_4837130990688141312_n.jpg?_nc_cat=101&_nc_ad=z-m&_nc_cid=0&oh=538ab3166c1d5561d3488c2a7362256a&oe=5C235272",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"ERROR",
                          "type":"text",
                          "contactDate":null,
                          "text":"Please Wait...",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"SENDING",
                          "type":"text",
                          "contactDate":null,
                          "text":"Sorry for Please Wait...",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"OK",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "type":"attchment",
                          "attchment":[  
                             {  
                                "id":1,
                                "name":"aa.txt",
                                "uri":"/aaa-2081091.txt",
                                "size":"100 KB",
                                "extension":"txt"
                             }
                          ],
                          "parentMessageId":"123112"
                       }
                    ]
                 }
              }
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  
  
  /interaction/{interactionId}/take:
    post:
      tags:
        - interaction
      summary: Take Owner or open Assigned record from My Inbox 
      description: Returns a single interaction
      operationId: takeInteractionById
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              response:
                $ref: '#/definitions/ResponseMessage'
              interaction:
                $ref: '#/definitions/InteractionEmailInfo'
          examples:
            JSON Response Chat:
              {  
                 "response":{  
                    "Message":"OK",
                    "ErrorMessage":""
                 },
                 "interaction":{  
                    "uuid":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "customerContactId":"39012046-8e55-11e8-9eb6-529269fb1459",
                    "contactRefNo":"123210",
                    "customerId":"390122bc-8e55-11e8-9eb6-529269fb1459",
                    "channelcode":"LINE",
                    "interActionAccountName":"ABCLine",
                    "interactionName":"Apichat Somjainuk",
                    "customertype":"Customer",
                    "customerClassify":"Single",
                    "interactionContactName":"@apichat",
                    "interationDirection":"IN",
                    "customerImage":"/customer/89302180321/profile.jpg",
                    "customerAbbr":"AS",
                    "customerAbbrColor":"#1ABC9C",
                    "hasAttachment":true,
                    "status":"Pending",
                    "state":"Wrap-up",
                    "stateDate":"2018-11-02T04:29:19.150",
                    "isRead":true,
                    "createDate":"2018-11-02T04:29:19.150",
                    "updateDate":"2018-11-02T04:29:19.150",
                    "interactionFlag":true,
                    "isReadOnly":true,
                    "assignTo":"Agent1",
                    "allowIgnore":false,
                    "isTransfer":false,
                    "tag":[  
                       {  
                          "name":"Completed",
                          "value":"Completed",
                          "description":"Contact Result Level 1 | contact Restul Level 2"
                       }
                    ],
                    "messageContent":[  
                       {  
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"Greeting Customer Support"
                       },
                       {  
                          "contactName":"@Apichat",
                          "direction":"OUT",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"May Can i help you ? "
                       },
                       {  
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"https://scontent.xx.fbcdn.net/v/t1.15752-9/43062495_302429593821265_4837130990688141312_n.jpg?_nc_cat=101&_nc_ad=z-m&_nc_cid=0&oh=538ab3166c1d5561d3488c2a7362256a&oe=5C235272"
                       },
                       {  
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"ERROR",
                          "type":"text",
                          "contactDate":null,
                          "text":"Please Wait..."
                       },
                       {  
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"SENDING",
                          "type":"text",
                          "contactDate":null,
                          "text":"Sorry for Please Wait..."
                       },
                       {  
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"OK",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "type":"attchment",
                          "attchment":[  
                             {  
                                "id":1,
                                "name":"aa.txt",
                                "uri":"/aaa-2081091.txt",
                                "size":"100 KB",
                                "extension":"txt"
                             }
                          ]
                       }
                    ]
                 }
              }
            JSON Response Email:
              {  
                 "response":{  
                    "Message":"OK",
                    "ErrorMessage":""
                 },
                 "interaction":{  
                    "id":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "customerContactId":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "contactRefNo":"C-20101928",
                    "customerId":"390122bc-8e55-11e8-9eb6-529269fb1459",
                    "channelCode":"EMAIL",
                    "interActionAccountName":"ABC Email ",
                    "interactionName":"Apichat Somjainuk",
                    "customerType":"Customer",
                    "customerClassify":"Single",
                    "interactionContactName":"Apichat@abc.com",
                    "interationDirection":"IN",
                    "customerImage":"http://maxar/3281093fdsjlkfds",
                    "customerAbbr":"AS",
                    "customerAbbrColor":"#1ABC9C",
                    "hasAttachment":true,
                    "status":"assign",
                    "state":"Wrap-up",
                    "stateDate":"2018-11-02T04:29:19.150",
                    "isRead":true,
                    "createDate":"2018-11-02T04:29:19.150",
                    "updateDate":"2018-11-02T04:29:19.150",
                    "interactionFlag":true,
                    "assignTo":"Agent1",
                    "isReadOnly":false,
                    "allowIgnore":false,
                    "tag":[  
                       {  
                          "name":"Transfer",
                          "description":"Agent Leave"
                       }
                    ],
                    "messageContent":[  
                       {  
                          "id":"832901830921",
                          "type":"IN",
                          "from":"nacho@outlook.com",
                          "to":"sale@abc.com",
                          "cc":"nacho@gmail.com",
                          "bcc":"user@example.com",
                          "subject":"Sale Order Inquiry",
                          "Content":"some html text",
                          "attachment":[  
                             {  
                                "id":1,
                                "name":"aa.txt",
                                "uri":"/aaa-2081091.txt",
                                "size":"100 KB",
                                "mimeType":"text/plain"
                             },
                             {  
                                "id":2,
                                "name":"Profile.jpg",
                                "uri":"/Profile-2081091.jpg",
                                "size":"1201 KB",
                                "mimeType":"image/jpeg"
                             }
                          ]
                       }
                    ]
                 }
              }
            JSON Response Post:
              {  
                 "response":{  
                    "Message":"OK",
                    "ErrorMessage":""
                 },
                 "interaction":{  
                    "uuid":"39011c4a-8e55-11e8-9eb6-529269fb1459",
                    "customerContactId":"39012046-8e55-11e8-9eb6-529269fb1459",
                    "contactRefNo":"123210",
                    "customerId":"390122bc-8e55-11e8-9eb6-529269fb1459",
                    "channelcode":"FB",
                    "interActionAccountName":"ABC Fan Page",
                    "interactionName":"Apichat Somjainuk",
                    "customertype":"Customer",
                    "customerClassify":"Single",
                    "interactionContactName":"@apichat",
                    "interationDirection":"IN",
                    "customerImage":"/customer/89302180321/profile.jpg",
                    "customerAbbr":"AS",
                    "customerAbbrColor":"#1ABC9C",
                    "hasAttachment":true,
                    "status":"Pending",
                    "state":"Wrap-up",
                    "stateDate":"2018-11-02T04:29:19.150",
                    "isRead":true,
                    "createDate":"2018-11-02T04:29:19.150",
                    "updateDate":"2018-11-02T04:29:19.150",
                    "interactionFlag":true,
                    "isReadOnly":true,
                    "assignTo":"Agent1",
                    "allowIgnore":false,
                    "isTransfer":false,
                    "tag":[  
                       {  
                          "name":"Completed",
                          "value":"Completed",
                          "description":"Contact Result Level 1 | contact Restul Level 2"
                       }
                    ],
                    "messageContent":[  
                       {  
                          "messagId":"123890",
                          "contactNo":"12390-321",
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"Greeting Customer Support",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@Apichat",
                          "direction":"OUT",
                          "status":"OK",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"May Can i help you ? ",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@Apichat",
                          "direction":"IN",
                          "type":"text",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "text":"https://scontent.xx.fbcdn.net/v/t1.15752-9/43062495_302429593821265_4837130990688141312_n.jpg?_nc_cat=101&_nc_ad=z-m&_nc_cid=0&oh=538ab3166c1d5561d3488c2a7362256a&oe=5C235272",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"ERROR",
                          "type":"text",
                          "contactDate":null,
                          "text":"Please Wait...",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"SENDING",
                          "type":"text",
                          "contactDate":null,
                          "text":"Sorry for Please Wait...",
                          "parentMessageId":"123112"
                       },
                       {  
                          "messagId":"123890",
                          "contactName":"@ABCLine",
                          "direction":"OUT",
                          "status":"OK",
                          "contactDate":"2018-11-02T04:29:19.150",
                          "type":"attchment",
                          "attchment":[  
                             {  
                                "id":1,
                                "name":"aa.txt",
                                "uri":"/aaa-2081091.txt",
                                "size":"100 KB",
                                "extension":"txt"
                             }
                          ],
                          "parentMessageId":"123112"
                       }
                    ]
                 }
              }
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []
  /interaction/{interactionId}/draft:
    post:
      tags:
        - interaction
      summary: Save Draft of Message Content
      description: Returns a single interaction
      operationId: draftEmail
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: Email Message Content Object
          required: true
          schema:
             $ref: '#/definitions/MessageContentEmail'
              
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              response:
                $ref: '#/definitions/ResponseMessage'
              messageContent:
                type: object
                properties: 
                  id: 
                    type: "string"
                    example: "832901830921"
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []
  
  
  
  /interaction/{interactionId}/send-email:
    post:
      tags:
        - interaction
      summary: Send Email Message
      description: return status 
      operationId: sendMessage
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: Email Message Content Object
          required: true
          schema:
             $ref: '#/definitions/MessageContentEmail'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              response:
                $ref: '#/definitions/ResponseMessage'
              interaction:
                $ref: '#/definitions/InteractionEmailInfo'
#             messageContent:
#                type: object
#                properties: 
#                  id: 
#                    type: "string"
#                    example: "832901830921"
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []        
        
  /interaction/{interactionId}/send-chat:
    post:
      tags:
        - interaction
      summary: Send Chat
      description: return status 
      operationId: sendChatMessage
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: Email Message Content Object
          required: true
          schema:
             $ref: '#/definitions/MessageContentChatSend'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              response:
                $ref: '#/definitions/ResponseMessage'
              messageContent:
                $ref: '#/definitions/MessageContentChat'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []      

  /interaction/{interactionId}/send-post:
    post:
      tags:
        - interaction
      summary: Snd Post Message
      description: return status 
      operationId: sendPostMessage
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: Email Message Content Object
          required: true
          schema:
             $ref: '#/definitions/MessageContentPostSend'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              response:
                $ref: '#/definitions/ResponseMessage'
              messageContent:
                $ref: '#/definitions/MessageContentPost'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []    
  /interaction/transfer:
    post:
      tags:
        - interaction
      summary: CTransfer list of Interaction to single Agent (with reason)
      description: '1111'
      operationId: Transfer
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: object
            properties:
              transferReasonId:
                type: integer
                example: '111'
              userId:
                type: string
                format: uuid
                example: 0b4331e-249e-11e9-ab14-d663bd873d93
              InteractionIds:
                type: array
                items:
                  type: string
                  format: uuid
                  example: 0b43ef1e-249e-11e9-ab14-d663bd873d93
      responses:
        default:
          description: successful operation
  /interaction/ignore:
    post:
      tags:
        - interaction
      summary: Ignore List of Interaction with REason
      description: '1111'
      operationId: ignore
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: object
            properties:
              ignoreReasonId:
                type: integer
                example: '111'
              description:
                type: integer
                example: Junk Rebcord
              InteractionIds:
                type: array
                items:
                  type: string
                  format: uuid
                  example: 0b43f1a8-249e-11e9-ab14-d663bd873d
      responses:
        default:
          description: successful operation
  '/interaction/{interactionId}/toggle-flag':
    post:
      tags:
        - interaction
      summary: Toggle Interaction Flag
      description: Returns a single interaction
      operationId: toggleFlagbyid
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              interactionFlag:
                type: boolean
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []
  '/interaction/{interactionId}/end':
    post:
      tags:
        - interaction
      summary: End Interaction such as End Call/ End Chat after sned Email 
      description: '1111'
      operationId: End Interaction
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: interaction id that will set to Active Agent Tab
          required: true
          type: string
          format: UUID
      responses:
        default:
          description: successful operation
          schema:
            $ref: '#/definitions/InteractionTime'
  '/interaction/{interactionId}/time':
    get:
      tags:
        - interaction
      summary: Get Time of interaction 
      description: '1111'
      operationId: get interaction Time
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: interaction id that will set to Active Agent Tab
          required: true
          type: string
          format: UUID
      responses:
        default:
          description: successful operation
          schema:
            $ref: '#/definitions/InteractionTime'
  '/interaction/{interactionId}/active':
    post:
      tags:
        - interaction
      summary: set Active Interaction and get interaction Time
      description: '1111'
      operationId: ActiveTime
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: interaction ID
          required: true
          type: string
          format: UUID
      responses:
        default:
          description: successful operation
          schema:
            $ref: '#/definitions/InteractionTime'

  '/interaction/{interactionId}/inactive':
    post:
      tags:
        - interaction
      summary: set inactive interaction 
      description: '1111'
      operationId: InactiveTime
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: interaction ID
          required: true
          type: string
          format: UUID
      responses:
        default:
          description: successful operation
  '/interaction/{interactionId}/wrap':
    post:
      tags:
        - interaction
      summary: set Warp up to interaction 
      description: '1111'
      operationId: wrapUp
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: interaction id to wrap
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: object
            properties:
              contactResultID:
                type: integer
                example: '111'
              description:
                type: integer
                example: Contact Result Complete
      responses:
        default:
          description: successful operation
  '/interaction/{interactionId}/upload-image':
    post:
      tags:
        - interaction
      summary: uploads an image
      description: ''
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: interactionId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /knowledge-base/view:
    get:
      tags:
        - knowledgeBase
      summary: get lis of knownledge view by parameter (only status = approved)
      description: ''
      operationId: findknowledgeBase
      produces:
        - application/json
      parameters:
        - in: query
          name: q
          type: string
          description: "Search value in KB Name & KB Content"
        - in: query
          name: name
          type: string
          description:  "Search value in KB Name"
        - in: query
          name: content
          type: string
          description:  "Search value in KB Content"
        - in: query
          name: lastCommentDate
          type: string
          description: 'the format will be number + Character D,M,Y such as 3D 6M 1Y for search record for last 3 Day, 6 Month, 1 Year'
        - name: scope
          in: query
          description: scope of KB that User can access. Scope will use when Feature that  Customer can Access Ruamitr KB
          type: string
          enum:
            - all
            - internal
            - external
          default: all
        - in: query
          name: offset
          type: integer
          description: >-
            The number of items to skip before starting to collect the result
            set.
          default: 0
        - name: tag
          in: query
          description: tag of KB it will use when open KB after slect case that will pass tag of case type to match with kb tag
          type: array
          items:
            type: string
          default: ''
          collectionFormat: csv
        - in: query
          name: userId
          type: string
          format: UUID
          required: true
          description: uuid of agent that access to KB to get limit per page 
        - in: query
          name: parentId
          type: string
          format: UUID
        - name: sort
          in: query
          description: 'sor by tag will apply when using as  '
          type: array
          items:
            type: string
            enum:
              - 'tag:desc'
              - 'tag:asc'
              - 'usedCount:asc'
              - 'usedCount:desc'
            default: 'usedCount:desc'
            collectionFormat: csv
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/List-knowledgeBase'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /knowledge-base/{knowledgeBaseId}/view:
    get:
      tags:
        - knowledgeBase
      summary: Find knownledge Base by ID
      description: Returns a single knownledge Base in view mode for user 
      operationId: getviewbyknowledgeBaseId
      produces:
        - application/json
      parameters:
        - name: knowledgeBaseId
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/knowledgeBaseView'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
  /knowledge-base/view/getKbTree:
    get:
      tags:
        - knowledgeBase
      summary: 'get Tree of KB '
      description: ''
      operationId: getshowTree
      produces:
        - application/json
      parameters:
        - name: UUID
          in: query
          description: UUID of Parent ID
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              items:
                $ref: '#/definitions/List-knowledgeBase-Trees'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /knowledge-base:
    post:
      tags:
        - knowledgeBase
      summary: Add a new KB to the customer
      description: ''
      operationId: addknowledgeBase
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            $ref: '#/definitions/interactionEmail'
      responses:
        '405':
          description: Invalid input
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
    put:
      tags:
        - knowledgeBase
      summary: Update an existing interaction
      description: ''
      operationId: updateknowledgeBase
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            $ref: '#/definitions/interactionEmail'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
        '405':
          description: Validation exception
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/knowledge-base/{knowledgeBaseId}':
    get:
      tags:
        - knowledgeBase
      summary: Find knownledge Base by ID
      description: Returns a single knownledge Base
      operationId: getknowledgeBaseId
      produces:
        - application/json
      parameters:
        - name: knowledgeBaseId
          in: path
          description: ID of interaction to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/knowledgeBase'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
  /knowledge-base/getKBTree:
    get:
      tags:
        - knowledgeBase
      summary: 'get Tree of KB '
      description: Multiple status values can be provided with comma separated strings
      operationId: getManageTree
      produces:
        - application/json
      parameters:
        - name: UUID
          in: query
          description: UUID of Parent ID
          type: string
        - name: type
          in: query
          description: Type of Query
          type: string
          enum:
            - All
            - ParentID
            - Root
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/List-knowledgeBase-Configure-Tree'
          examples:
            application/json2:
              items:
                - id: ed3ea5ed-f08a-491c-8730-dec973a732cf
                  name: Name | Status
                  status: Cutomer ID
                  isLeaf: 'false'
                  children:
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: Payment
                      status: Cutomer ID
                      isLeaf: true
                      children: []
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: refund | Wait for Approve
                      status: ''
                      isLeaf: true
                      children: []
                - id: ed3ea5ed-f08a-491c-8730-dec973a732cf
                  name: Name | Status
                  status: Cutomer ID
                  isLeaf: 'false'
                  children:
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: Payment
                      status: Cutomer ID
                      isLeaf: true
                      children: []
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: refund | Wait for Approve
                      status: ''
                      isLeaf: true
                      children: []
                - id: ed3ea5ed-f08a-491c-8730-dec973a732cf
                  name: Name | Status
                  status: Cutomer ID
                  isLeaf: 'false'
                  children:
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: Payment
                      status: Cutomer ID
                      isLeaf: true
                      children:
                        - id: ed3ea5ed-f08a-491c-8730-dec973a732cf
                          name: Name | Status
                          status: Cutomer ID
                          isLeaf: 'false'
                          children:
                            - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                              name: Payment
                              status: Cutomer ID
                              isLeaf: true
                              children: []
                            - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                              name: refund | Wait for Approve
                              status: ''
                              isLeaf: true
                              children:
                                - id: ed3ea5ed-f08a-491c-8730-dec973a732cf
                                  name: Name | Status
                                  status: Cutomer ID
                                  isLeaf: 'false'
                                  children:
                                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                                      name: Payment
                                      status: Cutomer ID
                                      isLeaf: true
                                      children: []
                                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                                      name: refund | Wait for Approve
                                      status: ''
                                      isLeaf: true
                                      children: []
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: refund | Wait for Approve
                      status: ''
                      isLeaf: true
                      children: []
                - id: ed3ea5ed-f08a-491c-8730-dec973a732cf
                  name: Name | Status
                  status: Cutomer ID
                  isLeaf: 'false'
                  children:
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: Payment
                      status: Cutomer ID
                      isLeaf: true
                      children: []
                    - id: ed3ea5ed-f08a-491c-8730-dec973a7322f
                      name: refund | Wait for Approve
                      status: ''
                      isLeaf: true
                      children: []
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /customer:
    get:
      tags:
        - customer
      summary: 'Search Customer '
      description: >-
        Return list of customer that will show in search main page and customer
        search pop up
      operationId: getCustomers
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          type: string
          description: >-
            Search customer.name 
        - in: query
          name: surname
          type: string
          description: >-
            Search customer.name and customer.surname 
        - in: query
          name: includeContactPerson
          type: boolean
          description: using name and surname of customer to search contact person record
        - in: query
          name: customerType
          type: integer
          description: using value in dropdown to search value in customer.customerType
        - in: query
          name: lastContactDate
          type: string
          description: >-
            the format will be number + Character D,M,Y such as 3D 6M 1Y for
            search record for last 3 Day, 6 Month, 1 Year
        - in: query
          name: idNo
          type: string
          description: ID Number of Customer.IdNo
        - in: query
          name: contactNo
          type: string
          description: customerContact.ContactNo
        - name: gender
          in: query
          description: gender of customer
          type: string
          enum:
          - M
          - F
        - name: isTransgender
          in: query
          description: Flag to identify that customer is transgender
          type: boolean
        - in: query
          name: q
          type: string
          description: >-
            Query string when search using keyword againest Customer Name /
            Surname /  Contact No
        - in: query
          name: offset
          type: integer
          default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set. (Paging)
        - name: sort
          in: query
          description: Sort field when search customer last_contact_date, Customer Type
          type: array
          items:
            type: string
            enum:
              - 'date:asc'
              - 'date:desc'
              - 'customerType:asc'
              - 'customerType:desc'
            default: 'date:desc'
            collectionFormat: csv
        - in: query
          name: isCorporate
          type: boolean
          default: false
          description: flag to identify that customer is corporate customer
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/CustomerInfoList'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []
    post:
      tags:
        - customer
      summary: Get Customer Handling Base on Customer Lay out
      description: ''
      operationId: addCustomerProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: customer property object that needs to be added to the customer
          required: true
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/CustomerPOST-PUT'
              contacts:
                type: array
                items:
                  $ref: '#/definitions/CustomerContactPOST-PUT'
              customerAdditionalField:
                $ref: '#/definitions/CustomerPropertyPOST-PUT'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              customer:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 8f493b08-0a9e-49e1-a14f-85b379d67193
                    description: uuid of customer
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
        '405':
          description: Validation exception
  '/customer/{customerId}':
    get:
      tags:
        - customer
      summary: Get Customer Handling Base on Customer Lay out
      description: ''
      operationId: customerProfile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/Customer'
              contact:
                type: array
                items:
                  $ref: '#/definitions/CustomerContact'
              address:
                type: array
                items:
                  $ref: '#/definitions/CustomerAddress'
              customerContactPerson:
                type: array
                items:
                  $ref: '#/definitions/CustomerContactPerson'
              customerAdditionalField:
                $ref: '#/definitions/CustomerProperty'
    put:
      tags:
        - customer
      summary: Get Customer Handling Base on Customer Lay out
      description: ''
      operationId: UpdatecustomerProfile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: customer property object that needs to be added to the customer
          required: true
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/CustomerPOST-PUT'
              contacts:
                type: array
                items:
                  $ref: '#/definitions/CustomerContactPOST-PUT'
                example:
                  - id: 39011c4a-8e55-11e8-9eb6-529269fb1459
                    countryCode: '+66'
                    contactNo: 0891172XXX
                    channelCodeContactType: PHONE - HOME
                    isDefault: false
                  - id: 39011c4a-8e55-11e8-9eb6-529269fb1458
                    countryCode: '+66'
                    contactNo: 0891172XXX
                    channelCodeContactType: PHONE - HOME
                    isDefault: false
                  - contactNo: kamalas@aaa.com
                    channelCodeContactType: EMAIL
                    isDefault: false
                  - id: 39011c4a-8e55-11e8-9eb6-529269fb1456
                    countryCode: '+66'
                    contactNo: 0891172XXX
                    channelCodeContactType: PHONE - HOME
                    isDefault: false
                    isDeleted: true
              customerAdditionalField:
                $ref: '#/definitions/CustomerPropertyPOST-PUT'
      responses:
        '200':
          description: successful operation
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/customer/{customerId}/customer-handling-info':
    get:
      tags:
        - customer
      summary: Get Customer Handling Base on Customer Lay out
      description: ''
      operationId: quickInfo
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - in: query
          name: customerLayoutID
          type: string
          description: >-
            Layout that will display in customer handling if blank show default
            layout
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              customerId:
                type: string
                format: uuid
                example: b8f19822-47b9-4322-82eb-90e9fc7ae9ff
              quickInfo:
                type: array
                items:
                  $ref: '#/definitions/CustomerInfoLayout'
              moreInfo:
                type: array
                items:
                  $ref: '#/definitions/CustomerInfoLayout'
              contact:
                type: array
                items:
                  $ref: '#/definitions/CustomerContact'
          examples:
            application/json:
              customerId: e09419e0-e345-11e8-9f32-f2801f1b9fd1
              quickInfo:
                - 
                  label: Cutomer ID
                  type: string
                  value: '1882901'
                  isMask: false
                  mask: null
                - 
                  label: Account Name
                  type: string
                  value: ABC Corp.
                  isMask: false
                  mask: null
                - 
                  label: Customer Type
                  type: string
                  value: VIP
                  isMask: false
                  mask: null
                - 
                  label: Date of Birth
                  type: date
                  value: '1978-03-24T00:00:00'
                  isMask: false
                  mask: null
                - 
                  label: Membership ID
                  type: string
                  value: '21839021'
                  isMask: true
                  mask: X-XXX-XXXX
                - 
                  label: Budget Amount
                  type: string
                  value: 200000
                  isMask: false
                  mask: null
                - 
                  label: Point Expiry Date
                  type: date
                  value: '2019-02-10T00:00:00'
                  isMask: false
                  mask: null
                - 
                  label: Credit card number
                  type: string
                  value: 374990043XXXX
                  isMask: true
                  mask: X-XXXX-XXXX-XXXX
                - 
                  label: Remaining Point
                  type: number
                  value: 1202
                  isMask: false
                  mask: null
                - 
                  label: Citizen ID
                  type: string
                  value: 177826171XXXX
                  isMask: true
                  mask: X-XXXX-XXXXX-XX-X
              moreInfo:
                - 
                  label: Last Purchase Date
                  type: date-time
                  value: '2017-07-21T17:32:28'
                  isMask: false
                  mask: null
                - 
                  label: Home page
                  type: uri
                  value: www.abc.com
                  isMask: false
                  mask: null
                - 
                  label: In Warranty
                  type: string
                  value: true
                  isMask: false
                  mask: null
                - 
                  label: Prefer Time
                  type: time
                  value: '1900-01-01T17:00:00'
                  isMask: false
                  mask: null
              contact:
                - id: e0941292-e345-11e8-9f32-f2801f1b9fd1
                  channelCodeContactType: PHONE - MOBILE
                  countryCode: "+66"
                  contactNo: 0891172111
                  isMask: true
                  mask: (XXX) XXX-XXXX
                  isDefault: true
                - id: e0941738-e345-11e8-9f32-f2801f1b9fd1
                  channelCodeContactType: EMAIL
                  contactNo: kamaa@gmail.com
                  isMask: false
                  mask: null
                  isDefault: true
                - id: e0941738-e345-11e8-9f32-f2801f1b9fd1
                  channelCodeContactType: EMAIL
                  countryCode: null
                  contactNo: kamaa@ABC.com
                  isMask: false
                  mask: null
                  isDefault: false
                - id: e09418a0-e345-11e8-9f32-f2801f1b9fd1
                  channelCodeContactType: LINE
                  countryCode: null
                  contactNo: '@kamala'

                  isMask: false
                  mask: null
                  isDefault: true
                - id: e09419e0-e345-11e8-9f32-f2801f1b9fd1
                  channelCodeContactType: FB
                  countryCode: null
                  contactNo: KamalaInw
                  isMask: false
                  mask: null
                  isDefault: false
                - id: e0941712-e345-11e8-9f32-f2801f1b9fd1
                  channelCodeContactType: PHONE - HOME
                  countryCode: "+66"
                  contactNo: '027761523'

                  isMask: true
                  mask: X-XXX-XXXX
                  isDefault: false
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/customer/{customerId}/address':
    get:
      tags:
        - customer
      summary: Get List of Address Information of Customer
      description: ''
      operationId: getAddressByCustomerID
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of Customer to get list of Address
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/CustomerAddress'
    post:
      tags:
        - customer
      summary: Add a new Address  to the customer
      description: ''
      operationId: addCustomerAddress
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of customer(UUID)
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: customer property object that needs to be added to the customer
          required: true
          schema:
            $ref: '#/definitions/CustomerAddressPOST-PUT'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              customerAddress:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 8f493b08-0a9e-49e1-a14f-85b379d67193
                    description: uuid of customer
        '405':
          description: Invalid input
    put:
      tags:
        - customer
      summary: Update an existing Address
      description: ''
      operationId: updateCustomerAddress
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of customer(UUID)
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: customer property object that needs to be added to the customer
          required: true
          schema:
            $ref: '#/definitions/CustomerAddressPOST-PUT'
      responses:
        '200':
          description: sucessful peration
        '400':
          description: Invalid ID supplied
        '404':
          description: customer property not found
        '405':
          description: Validation exception
  '/customer/{customerId}/contact-person':
    get:
      tags:
        - customer
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerContactPersonByCustomerId
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of customer(UUID) to return
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/CustomerContactPerson'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
      security:
        - api_key: []
    post:
      tags:
        - customer
      summary: Add a new customer ContactPerson
      description: ''
      operationId: addCustomerContactPerson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of customer(UUID)
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: Add Customer Contact Person to customer
          required: true
          schema:
            $ref: '#/definitions/CustomerContactPersonPOST-PUT'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              customerContactPerson:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 8f493b08-0a9e-49e1-a14f-85b379d67193
                    description: uuid of customer
        '405':
          description: Invalid input
  '/customer/{customerId}/contact-person/{customerContactPersonId}':
    get:
      tags:
        - customer
      summary: Update an existing customer
      description: ''
      operationId: getstomerContactPerson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of customer(UUID) to return
          required: true
          type: string
          format: uuid
        - name: customerContactPersonId
          in: path
          description: ID of Conact Person
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/CustomerContactPersonPOST-PUT'
              contacts:
                type: array
                items:
                  $ref: '#/definitions/CustomerContactPersonContactPOST-PUT'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
        '405':
          description: Validation exception
    put:
      tags:
        - customer
      summary: Update an existing customer
      description: ''
      operationId: updateCustomerContactPerson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of customer(UUID) to return
          required: true
          type: string
          format: uuid
        - name: customerContactPersonId
          in: path
          description: ID of Conact Person
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            type: object
            properties:
              customer:
                $ref: '#/definitions/CustomerContactPersonPOST-PUT'
              contacts:
                type: array
                items:
                  $ref: '#/definitions/CustomerContactPersonContactPOST-PUT'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
        '405':
          description: Validation exception
  /customer/merge-customer/:
    post:
      tags:
        - customer
      summary: Update an existing customer
      description: ''
      operationId: mergeCustomer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            type: array
            items:
              properties:
                customerId:
                  type: string
                  format: uuid
                isMaster:
                  type: boolean
            example:
              - customerId: 39011c4a-8e55-11e8-9eb6-529269fb1459
                isMaster: false
              - customerId: 39011c4a-8e55-11e8-9eb6-529269fb1458
                isMaster: true
              - customerId: 39011c4a-8e55-11e8-9eb6-529269fb1456
                isMaster: false
      responses:
        '200':
          description: successful operation
  '/customer/{customerId}/case':
    get:
      tags:
        - customer
      summary: uploads an image
      description: ''
      operationId: cases
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/list-cases'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      deprecated: true
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/customer/{customerId}/campaign':
    get:
      tags:
        - customer
      summary: uploads an image
      description: ''
      operationId: campaigns
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/list-campaigns'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
      deprecated: true
  '/customer/{customerId}/schedule':
    get:
      tags:
        - customer
      summary: uploads an image
      description: ''
      operationId: schedules
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/list-schedules'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
      deprecated: true
  '/customer/{customerId}/sales-history':
    get:
      tags:
        - customer
      summary: uploads an image
      description: ''
      operationId: sales
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/list-saleHistory'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
      deprecated: true
  '/customer/{customerId}/interaction-history':
    get:
      tags:
        - customer
      summary: uploads an image
      description: ''
      operationId: interactionHistory
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: ID of interaction to update
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              points:
                type: array
                items:
                  $ref: '#/definitions/group-list-interactionHistory'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
            example:
              application/json2:
                pagination:
                  limit: 0
                  previouspage: 0
                  nextpage: 0
                  currentpage: 0
                  pagecount: 0
                  totalcount: 0
                points:
                  - groupName: '2018-07-31'
                    items:
                      - id: 39011c4a-8e55-11e8-9eb6-529269fb1459
                        subject: Inquiry Prodcut PDF-123a
                        shortBody: 'Dear Support, i neeed you help for product'
                        channelcode: EMAIL
                        status: Closed
                        state: Ignore
                        interactionDate: '2018-07-31T07:28:00.543'
                        hasAttachment: true
                        contactResultText: Inquiry|Product
                        assignTo: Agent1
                  - groupName: '2018-08-01'
                    items:
                      - id: 39011c4a-8e55-11e8-9eb6-529269fb1459
                        subject: Inquiry Prodcut PDF-123a
                        shortBody: 'Dear Support, i neeed you help for product'
                        channelcode: EMAIL
                        status: Closed
                        state: Ignore
                        interactionDate: '2018-08-01T07:28:00.543'
                        hasAttachment: true
                        contactResultText: Inquiry|Product
                        assignTo: Agent1
                  - groupName: '2018-08-02'
                    items:
                      - id: 39011c4a-8e55-11e8-9eb6-529269fb1459
                        subject: Inquiry Prodcut PDF-123a
                        shortBody: 'Dear Support, i neeed you help for product'
                        channelcode: EMAIL
                        status: Closed
                        state: Ignore
                        interactionDate: '2018-08-02T07:28:00.543'
                        hasAttachment: true
                        contactResultText: Inquiry|Product
                        assignTo: Agent1
                      - id: 39011c4a-8e55-11e8-9eb6-529269fb1459
                        subject: Inquiry Prodcut PDF-123a
                        shortBody: 'Dear Support, i neeed you help for product'
                        channelcode: EMAIL
                        status: Closed
                        state: Ignore
                        interactionDate: '2018-08-02T07:28:00.543'
                        hasAttachment: true
                        contactResultText: Inquiry|Product
                        assignTo: Agent1
                metadata:
                  - key: string
                    value: string
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
      deprecated: true
  /customer/inventory:
    get:
      tags:
        - customer
      summary: Returns interaction inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
          examples:
            application/json1:
              items:
                - id: 80fdf16a-3c98-4764-ac6c-e177362e7e8a
                  channelCode: Email
                  interActionAccountName: ABC Hotline
                  interactionName: Apichat Somjainuk
                  customerType: VIP
                  interactionContactName: apichat@gmail.com
                  AssignTo: User
                  Assignee: Agent1
                  interationDirection: IN
                  Title: 'Last IVR: Inquiry'
                  customerImage: /customer/89302180321/profile.jpg
                  customerAbbr: AS
                  color: '#1ABC9C'
                  body: ''
                  hasAttachment: 'false'
                  status: assign
                  state: waitforapprove
                  isRead: 'false'
                  createInteractionDate: '2018-02-01 12:23:11'
                  updateInteractionDate: '2018-02-01 12:25:11'
                  flag: 'false'
              metadata:
                pagination:
                  limit: 25
                  previousPage: 1
                  nextPage: 3
                  currentPage: 2
                  pageCount: 40
                  totalCount: 1000
      security:
        - api_key: []
      deprecated: true
  /customer/contacts:
    post:
      tags:
        - customer
      summary: Place an order for a interaction
      description: ''
      operationId: placeOrder
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: order placed for purchasing the interaction
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Invalid Order
      deprecated: true
  '/customer/contacts/{contactId}':
    get:
      tags:
        - customer
      summary: Find purchase order by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      operationId: getOrderById
      produces:
        - application/json
      parameters:
        - name: contactId
          in: path
          description: ID of interaction that needs to be fetched
          required: true
          type: integer
          maximum: 10
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
      deprecated: true
    delete:
      tags:
        - customer
      summary: Delete purchase order by ID
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors
      operationId: deleteOrder
      produces:
        - application/json
      parameters:
        - name: contactId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          type: integer
          minimum: 1
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
      deprecated: true

  
  
  /user:
    get:
      tags:
        - user
      summary: Search User In Ruamitr
      description: ''
      operationId: getUser
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userName
          in: query
          description: ID of user
          type: string
        - name: userGroup
          in: query
          description: list of User group that active in system 
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/User'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  '/user/{userId}/news':
    get:
      tags:
        - user
      summary: uploads an image
      description: ''
      operationId: news
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/list-News'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/user/{userId}/schedules':
    get:
      tags:
        - user
      summary: uploads an image
      description: ''
      operationId: user-schedules
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/list-schedules'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/user/{userId}/cases':
    get:
      tags:
        - user
      summary: uploads an image
      description: ''
      operationId: user-cases
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              items:
                type: array
                items:
                  $ref: '#/definitions/list-cases'
              metadata:
                type: array
                items:
                  $ref: '#/definitions/Metadata'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/user/{userId}/notes':
    get:
      tags:
        - user
      summary: uploads an image
      description: ''
      operationId: user-notes
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/list-Notes'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/user/{userId}/statistics':
    get:
      tags:
        - user
      summary: uploads an image
      description: ''
      operationId: user-statistics
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/kpi-statistic'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/user/{userId}/calendar':
    get:
      tags:
        - user
      summary: uploads an image
      description: ''
      operationId: user-calendar
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: false
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/calendar'
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /user/createWithArray:
    post:
      tags:
        - user
      summary: Creates list of user with given input array
      description: ''
      operationId: createuserWithArrayInput
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of user with given input array
      description: ''
      operationId: createuserWithListInput
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /knowledge-base/attachment:
    post:
      tags:
        - knowledgeBase
      summary: 'Creates new kwnonledge Base record '
      description: '1111'
      operationId: AddKBAttachment
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: object
            properties:
              uri:
                type: string
                example: item/attachment/545/551/103/20181003100010-FPSClicense(2).xml
              name:
                type: string
                example: item/attachment/545/551/103/20181003100010-FPSClicense(2).xml
              size:
                type: integer
                example: 1281
              createDate:
                type: string
                example: '2018-07-24T10:31:30.998'
              createBy:
                type: string
                example: c71a46b3-ef8d-45ac-b880-d409400246f3
              expirationDate:
                type: string
                example: '2018-07-25T10:31:30.998'
              isDelete:
                type: boolean
                example: 'false'
              knowledgeBaseId:
                type: string
                format: UUID
                example: ''
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Attachment'
  '/knowledge-base/{knowledgeBaseID}/attachment':
    get:
      tags:
        - knowledgeBase
      summary: Find attachment by knowledgeBase ID
      description: Returns a array of attachment
      operationId: getattahcmentbyknowledgeBaseID
      produces:
        - application/json
      parameters:
        - name: knowledgeBaseID
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: UUID
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Attachments'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
  '/knowledge-base/attachment/{attachmentID}':
    put:
      tags:
        - knowledgeBase
      summary: Updated user
      description: update one or more field by attachment ID
      operationId: updateKBAttachment
      produces:
        - application/json
      parameters:
        - name: attachmentID
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: UUID
        - in: body
          name: body
          description: Updated attachment object
          required: true
          schema:
            type: object
            properties:
              knowledgeBaseId:
                type: string
                format: UUID
                example: e1568137-3a22-4185-a88b-5e10c0b5e56b
              expirationDate:
                type: string
                format: datetime
                example: '2018-07-25T10:31:30.998'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
  '/knowledge-base/{knowledgeBaseID}/comment':
    get:
      tags:
        - knowledgeBase
      summary: get comment by knowledgeBase ID
      description: Returns a array of attachment
      operationId: getcommentbyknowledgeBaseID
      produces:
        - application/json
      parameters:
        - name: knowledgeBaseID
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: UUID
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/knowledgeBaseComment'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
    post:
      tags:
        - knowledgeBase
      summary: Add a new KB to the customer
      description: ''
      operationId: addknowledgeBaseComment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: knowledgeBaseID
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: UUID
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            $ref: '#/definitions/knowledgeBaseComment'
      responses:
        '405':
          description: Invalid input
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/knowledge-base/{knowledgeBaseID}/responseMessage':
    get:
      tags:
        - knowledgeBase
      summary: get responseMessage by knowledgeBase ID
      description: Returns a array of attachment
      operationId: knowledgeBaseID
      produces:
        - application/json
      parameters:
        - name: knowledgeBaseID
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: UUID
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/knowledgeBaseResponseMessage'
        '400':
          description: Invalid ID supplied
        '404':
          description: interaction not found
    post:
      tags:
        - knowledgeBase
      summary: Add a new KB to the customer
      description: ''
      operationId: addknowledgeBaseResponseMessage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: knowledgeBaseID
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: UUID
        - in: body
          name: body
          description: interaction object that needs to be added to the customer
          required: true
          schema:
            $ref: '#/definitions/knowledgeBaseResponseMessage'
      responses:
        '405':
          description: Invalid input
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/knowledge-base/response-message/{responseMessageID}':
    put:
      tags:
        - knowledgeBase
      summary: Updated user
      description: update one or more field by knownledge Base ResponseM essage ID
      operationId: updateKBresponseMessage
      produces:
        - application/json
      parameters:
        - name: responseMessageID
          in: path
          description: ID of interaction to return
          required: true
          type: string
          format: UUID
        - in: body
          name: body
          description: Updated attachment object
          required: true
          schema:
            $ref: '#/definitions/knowledgeBaseResponseMessage'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
  '/setting/severity/{severityID}':
    get:
      tags:
        - setting
      summary: Get severity By Id
      description: get list severity
      operationId: getServirityById
      produces:
        - application/json
      parameters:
        - name: severityID
          in: path
          description: ID of severity to return
          required: true
          type: string
          format: UUID
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Severity'
    put:
      tags:
        - setting
      summary: Update severity 
      description: ''
      operationId: updateServirity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: severityID
          in: path
          description: ID of severity to return
          required: true
          type: string
          format: UUID
        - in: body
          name: body
          description: severity Obejct (user id will update to updateBy)
          required: true
          schema:
            $ref: '#/definitions/SeverityPUT-POST'
      responses:
        '200':
          description: success Operation    
  '/setting/severity':
    get:
      tags:
        - setting
      summary: Get severity 
      description: get list severity
      operationId: getServirity
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Severity'

    post:
      tags:
        - setting
      summary: Add severity 
      description: ''
      operationId: AddServirity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: severity Obejct (user id will update to updateBy)
          required: true
          schema:
            $ref: '#/definitions/SeverityPUT-POST'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              severity:
                type: object
                properties:
                  id:
                    type: integer
                    format: uuid
                    example: 11
                    description: id of severity        
  
  '/setting/color/{type}':
    get:
      tags:
        - setting
      summary: Get Customer By Type
      description: get list of Color by color Type
      operationId: getcolorByType
      produces:
        - application/json
      parameters:
        - name: type
          in: path
          description: Color Type
          enum:
            - customer
            - tag
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Color'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/setting/address/{addressId}':
    get:
      tags:
        - setting
      summary: Finds Address infor
      description: Get Look up item using look up code
      operationId: getAddressInfoById
      produces:
        - application/json
      parameters:
        - name: addressId
          in: path
          description: id of Address
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Address'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/setting/address/{addressId}/tree':
    get:
      tags:
        - setting
      summary: Finds Address infor
      description: Get Look up item using look up code
      operationId: getAddressTreeById
      produces:
        - application/json
      parameters:
        - name: addressId
          in: path
          description: id of Address
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AddressTree'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/setting/get-lookup-item/{lookupCode}':
    get:
      tags:
        - setting
      summary: Finds Look up Item by lookupCode
      description: Get Look up item using look up code
      operationId: getLookupItemBylookupCode
      produces:
        - application/json
      parameters:
        - name: lookupCode
          in: path
          description: Code for Look up Value
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              options:
                $ref: '#/definitions/LookUpItem'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/setting/get-dependency-item/{dependencyGroupCode}':
    get:
      tags:
        - setting
      summary: get Level 1 of Dependency of group code
      description: Get Look up item using look up code
      operationId: getdependencyItemBydependencyGroupCode
      produces:
        - application/json
      parameters:
        - name: dependencyGroupCode
          in: path
          description: Code for Look up Value
          required: true
          type: string
        - name: dependencyCode
          in: path
          description: Code for Look up Value
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              options:
                $ref: '#/definitions/DependencyItem'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  '/setting/get-dependency-item/{dependencyGroupCode}/code/{dependencyCode}':
    get:
      tags:
        - setting
      summary: Finds Look up Item by lookupCode
      description: Get Look up item using look up code
      operationId: getdependencyItemBydependencyCode
      produces:
        - application/json
      parameters:
        - name: dependencyGroupCode
          in: path
          description: Code for Look up Value
          required: true
          type: string
        - name: dependencyCode
          in: path
          description: Code for Look up Value
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              options:
                $ref: '#/definitions/DependencyItem'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
  /setting/Interaction-account/:
    get:
      tags:
        - setting
      summary: Finds knownledge by parameter
      description: 'Multiple values can be provided with comma eg. channelCode=EMAIL,new'
      operationId: getInteractionAccountsByChannelCode
      produces:
        - application/json
      parameters:
        - name: channelCode
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - EMAIL
              - PHONE
              - FBMSG
              - FB
              - LINE
              - PANTIP
              - IG
              - SMS
              - WHATSAPP
              - TWITTER
              - GOOGLEPLUS
            default: assign
          collectionFormat: csv
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              items:
                $ref: '#/definitions/List-Interaction-Accounts'
        '400':
          description: Invalid status value
      security:
        - interactioncustomer_auth:
            - 'write:interactions'
            - 'read:interactions'
securityDefinitions:
  interactioncustomer_auth:
    type: oauth2
    authorizationUrl: 'http://interactioncustomer.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:interactions': modify interactions in your account
      'read:interactions': read your interactions
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Address:
    description: ''
    type: object
    properties:
      id:
        type: number
        example: 1267
      name:
        type: string
        example: แขวงดินแดง
      code:
        type: string
        example: AAMS
      postalCode:
        type: string
        example: '10320'
      createDate:
        type: string
        format: date-time
        example: '2018-07-26T08:59:33.188'
      createBy:
        type: string
        format: uuid
        example: 070ba3dd-a420-4d07-9ede-bfd6eee5afbd
      updateDate:
        type: string
        format: date-time
        example: '2018-07-26T08:59:33.188'
      updateBy:
        type: string
        format: uuid
        example: 070ba3dd-a420-4d07-9ede-bfd6eee5afbd
      enable:
        type: boolean
        example: true
      isDeleted:
        type: boolean
        example: false
      parentId:
        type: number
        example: 68
      seqNo:
        type: number
        example: 1
  AddressTree:
    type: array
    items:
      type: object
      properties:
        address:
          type: array
          items:
            type: object
            properties:
              level:
                type: number
                example: 1
              label:
                type: string
                example: Country
              options:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    label:
                      type: string
                      example: Thailand
                    isLeaf:
                      type: boolean
                      example: false
              value:
                type: number
                example: 1
  ResponseMessage:
    type: object
    required:
      - Message
      - ErrorMessage
    properties:
      Message:
        type: string
        example: 'OK'
        enum:
        - OK
        - Error
      ErrorMessage:
        type: string
        example: ''
  CustomerParentRecord:
    description: ''
    type: object
    properties:
      value:
        type: string
        format: uuid
        example: 8f493b08-0a9e-49e1-a14f-85b379d67193
      label:
        type: string
        description: Display Info of customer (cutomst.name - customer_type)
        example: Apichat - VIP
  ActionBy:
    type: object
    properties:
      value:
        type: string
        format: uuid
        example: 2e47fd56-a181-44d2-89ba-ccb946e6ec93
        description: User ID of  agent
      label:
        type: string
        description: User Name of Agent
        example: Agent1
  CustomerType:
    type: object
    properties:
      options:
        type: array
        items:
          type: object
          properties:
            value:
              type: number
              example: 1
            label:
              type: string
              example: VIP
      value:
        type: number
        example: 1
  Color:
    type: object
    properties:
      options:
        type: array
        items:
          type: object
          properties:
            value:
              type: number
              example: 1
            label:
              type: string
              example: '#321371'
      value:
        type: number
        example: 1
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      interactionId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  Attachments:
    type: array
    items:
      $ref: '#/definitions/Attachments'
    example:
      - id: 1
        name: aa.txt
        uri: /232810983920183
        size: 100 KB
        mimeType: txt
      - id: 2
        name: Profile.jpg
        uri: /382091830921809
        size: 1201 KB
        mimeType: jpg
  Attachment:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: '1'
      name:
        type: string
        example: FPSClicense(2).xml
      uri:
        type: string
        format: uri
        example: item/attachment/545/551/103/20181003100010-FPSClicense(2).xml
      size:
        type: integer
        example: 10 KB
      mimeType:
        type: string
        example: text
    xml:
      name: Attachment
  CustomerInfoList:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: a81aea2e-c116-4018-bd3a-9cb1f9fa9ee8
      abbr:
        type: string
        example: AS
      abbrColor:
        type: string
        example: '#1ABC9C'
      image:
        type: string
        example: ''
      customerName:
        type: string
        description: customer.name + customer.surname
        example: APichart Sokjia
      customerType:
        type: string
        example: VIP
      contactPersonName:
        type: string
        description: customerContactPerson.name + customerContactperson.surname
        example: Somchai prommak
      activeCase:
        type: integer
        description: number of active case from customerStatistic
        example: 0
      activeSale:
        type: integer
        description: number of active Sale from customerStatistic
        example: 2
      lastHandleDate:
        type: string
        format: date-time
        description: last handle Date from customerstatistic
        example: '2018-07-26T08:59:33.188'
      lastHandleBy:
        type: string
        description: last handle Date from customerStatistic
        example: agent1
  Customer:
    type: object
    required:
      - id
      - isCorporate
      - name
    properties:
      id:
        type: string
        format: uuid
        example: 8f493b08-0a9e-49e1-a14f-85b379d67193
        description: uuid of customer
      isCorporate:
        type: boolean
        example: false
      customerTypeId:
        type: object
        properties: 
          value: 
            type: integer
            example: 1
          label: 
            type: "string"
            example: VIP
        description: link to customer Type
      refNo:
        type: string
        example: CC-18920
      title:
        type: object
        properties: 
          value: 
            type: "string"
            example: mr
          label: 
            type: "string"
            example: นาย
        description: link to look up code = title
      firstName:
        type: string
        example: apichat
      middleName:
        type: string
        example: ''
      surname:
        type: string
        example: tanaka
      nickName:
        type: string
        example: tree
      idType:
        type: object
        properties: 
          value: 
            type: "string"
            example: C
          label: 
            type: "string"
            example: Citizen ID
        description: link to look up code = idType
      idNo:
        type: string
        example: 374994443XXX
      gender:
        type: object
        properties: 
          value: 
            type: "string"
            example: F
          label: 
            type: "string"
            example: Female
        description: link to look up code = gender
      isTransgender:
        type: boolean
        example: false
      dob:
        type: string
        format: date-time
      website:
        type: string
        format: url
      race:
        type: object
        properties: 
          value: 
            type: "string"
            example: TH
          label: 
            type: "string"
            example: Thai
        description: link to look up code = race
      nationality:
        type: object
        properties: 
          value: 
            type: "string"
            example: TH
          label: 
            type: "string"
            example: Thai
        description: link to look up code = nationality
      occupation:
        type: object
        properties: 
          value: 
            type: "string"
            example: EDU
          label: 
            type: "string"
            example: Education
        description: link to look up code = occupation
      noOfEmployee:
        type: object
        properties: 
          value: 
            type: "string"
            example: 1To10
          label: 
            type: "string"
            example: 1 - 10
        description: link to look up code = noOfEmployee
      industry:
        type: object
        properties: 
          value: 
            type: "string"
            example: IT
          label: 
            type: "string"
            example: Information Technology
        description: link to look up code = industry
      emoticon:
        type: string
        example: '1'
      image:
        type: string
        format: uuid
        example: 2f0b42e7-65a0-4684-be9c-11063643ba1
      abbr:
        type: string
        example: AT
      abbrColorId:
        type: string
        example: "#1ABC9C"
      description:
        type: string
      parentId:
        $ref: '#/definitions/CustomerParentRecord'
      ownerBy:
        $ref: '#/definitions/ActionBy'
      createDate:
        type: string
        format: date-time
      createBy:
        $ref: '#/definitions/ActionBy'
      updateDate:
        type: string
        format: date-time
      updateBy:
        $ref: '#/definitions/ActionBy'
      enable:
        type: boolean
      isDeleted:
        type: boolean
    xml:
      name: Customer
  CustomerPOST-PUT:
    type: object
    properties:
      isCorporate:
        type: boolean
        example: false
      customerTypeId:
        type: integer
        example: 1
      refNo:
        type: string
        example: CC-18920
      initial:
        type: string
        example: mr
      name:
        type: string
        example: apichat
      middleName:
        type: string
        example: ''
      surname:
        type: string
        example: tanaka
      nickName:
        type: string
        example: tree
      idType:
        type: string
        example: citizen
      idNo:
        type: string
        example: 374994443XXX
      gender:
        type: string
        example: F
      isTransgender:
        type: boolean
        example: false
      dob:
        type: string
        format: date-time
      weight:
        type: number
      height:
        type: number
        format: date-time
      website:
        type: string
        format: url
      race:
        type: string
        example: TH
      nationality:
        type: string
        example: TH
      occupation:
        type: string
        example: EDU
      noOfEmployee:
        type: string
        example: 1to10
      industry:
        type: string
        example: IT
      emoticon:
        type: string
        example: '1'
      image:
        type: string
        format: uri
      abbr:
        type: string
        example: AT
      abbrColorId:
        type: string
        example: 1
      description:
        type: string
      parentId:
        $ref: '#/definitions/CustomerParentRecord'
      ownerBy:
        $ref: '#/definitions/ActionBy'
      enable:
        type: boolean
      isDeleted:
        type: boolean
    xml:
      name: CustomerPOST-PUT
  CustomerContactPersonPOST-PUT:
    type: object
    properties:
      relation:
        $ref: '#/definitions/LookUpValueRelation'
        description: link to lookup.code = relation
      initial:
        type: string
        example: mr
      firstName:
        type: string
        example: kama
      lastName:
        type: string
        example: nakas
      addressType:
        type: string
        example: home
        description: link to lookup.code = addressType
      addressLine1:
        type: string
        example: 912/1
      addressLine2:
        type: string
        example: '5'
      addressLine3:
        type: string
        example: ชิมลม แยก 4
      addressLine4:
        type: string
        example: ''
      addressLine5:
        type: string
        example: ''
      addressLine6:
        type: string
        example: ''
      addressLine7:
        type: string
        example: ''
      addressLine8:
        type: string
        example: ''
      subdistrictName:
        type: string
        example: แขวงวัดอรุณ
      districtName:
        type: string
        example: เขตบางคอแหลม
      provinceName:
        type: string
        example: กรุงเทพ
      countryName:
        type: string
        example: Thailand
      postalCode:
        type: string
        example: '10600'
      addressId:
        type: number
        example: 3545
      enable:
        type: boolean
        example: false
      isDeleted:
        type: boolean
        example: false
    xml:
      name: CustomerContactPerson
  CustomerContactPerson:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 10941738-e345-11e8-9f32-f2801f1b9fd1
      customerId:
        type: string
        format: uuid
        example: e0941738-e345-11e8-9f32-f2801f1b9fd1
      relation:
        $ref: '#/definitions/LookUpValueRelation'
        description: link to lookup.code = relation
      initial:
        type: string
        example: mr
      firstName:
        type: string
        example: kama
      lastName:
        type: string
        example: nakas
      addressType:
        type: string
        example: home
        description: link to lookup.code = addressType
      addressLine1:
        type: string
        example: 912/1
      addressLine2:
        type: string
        example: '5'
      addressLine3:
        type: string
        example: ชิมลม แยก 4
      addressLine4:
        type: string
        example: ''
      addressLine5:
        type: string
        example: ''
      addressLine6:
        type: string
        example: ''
      addressLine7:
        type: string
        example: ''
      addressLine8:
        type: string
        example: ''
      subdistrictName:
        type: string
        example: แขวงวัดอรุณ
      districtName:
        type: string
        example: เขตบางคอแหลม
      provinceName:
        type: string
        example: กรุงเทพ
      countryName:
        type: string
        example: Thailand
      postalCode:
        type: string
        example: '10600'
      contact:
        type: array
        items:
         $ref: '#/definitions/CustomerContactPersonContact'
      createDate:
        type: string
        example: ''
      createBy:
        $ref: '#/definitions/ActionBy'
      updateDate:
        type: string
        example: ''
      updateBy:
        $ref: '#/definitions/ActionBy'
      enable:
        type: boolean
        example: false
      isDeleted:
        type: boolean
        example: false
    xml:
      name: CustomerContactPerson
  CustomerContactPersonContact:
    type: object
    properties:
      id:
        type: number
        example: 1
      countryCode:
        type: string
        example: '+66'
      contactNo:
        type: string
        example: 0891172XXX
        description: masking value base on user profile
      channelCodeContactType:
        type: object
        description: link to Channel and contact Type
        properties: 
          value:
            type: string
            enum:
              - PHONE - HOME
              - PHONE - OFFICE
              - PHONE - MOBILE
              - EMAIL
              - FB
              - LINE
              - PANTIP
              - IG
              - SMS
              - WHATSAPP
              - TWITTER
              - GOOGLEPLUS
          label: 
            type: "string"
            example: Telephone - Home
      isMask:
        type: boolean
        example: false
      mask:
        type: string
        description: >-
          it will sow masking value for phone only  (application confgiure will
          configure digits that will use masking
        example: (XX) XXX-XXXX

      customerContactPersonId:
        type: number
        example: 2
    xml:
      name: CustomerContactPersonContact
  CustomerContactPersonContactPOST-PUT:
    type: object
    properties:
      countryCode:
        type: string
        example: '+66'
      contactNo:
        type: string
        example: 0891172XXX
        description: masking value base on user profile
      channelCodeContactType:
        type: object
        description: link to Channel and contact Type
        properties: 
          value:
            type: string
            enum:
              - PHONE - HOME
              - PHONE - OFFICE
              - PHONE - MOBILE
              - EMAIL
              - FB
              - LINE
              - PANTIP
              - IG
              - SMS
              - WHATSAPP
              - TWITTER
              - GOOGLEPLUS
          label: 
            type: "string"
            example: Telephone - Home
      isMask:
        type: boolean
        example: false
      mask:
        type: string
        description: >-
          it will sow masking value for phone only  (application confgiure will
          configure digits that will use masking
        example: (XX) XXX-XXXX
      isDefault:
        type: boolean
        example: false
    xml:
      name: CustomerContactPersonContact
  CustomerAddress:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        example: 8f493b08-0a9e-49e1-a14f-85b379d67193
      addressName:
        type: string
        example: 'นามกมลาสน์ '
      addressType:
        type: object
        description: link to look up coode= addressType
        properties: 
          value:
            type: string
            enum:
              - home
              - mailing
              - billing
          label: 
            type: "string"
            example: Home Address
      addressLine6:
        type: string
        example: ''
      addressLine7:
        type: string
        example: ''
      addressLine8:
        type: string
        example: ''
      subdistrictName:
        type: string
        example: แขวงวัดอรุณ
      districtName:
        type: string
        example: เขตบางคอแหลม
      provinceName:
        type: string
        example: กรุงเทพ
      countryName:
        type: string
        example: Thailand
      postalCode:
        type: string
        example: '10600'
      addressId:
        type: number
        example: 125
      createDate:
        type: string
        format: date-time
        example: '2018-07-26T08:59:33.188'
      createBy:
        $ref: '#/definitions/ActionBy'
      updateDate:
        type: string
        format: date-time
        example: '2018-07-26T08:59:33.188'
      updateBy:
        $ref: '#/definitions/ActionBy'
      enable:
        type: boolean
        example: false
      isDeleted:
        type: boolean
        example: false
    xml:
      name: CustomerAddress
  CustomerAddressPOST-PUT:
    type: object
    properties:
      addressName:
        type: string
        example: 'นามกมลาสน์ '
      addressType:
        $ref: '#/definitions/LookUpValue'
      addressLine1:
        type: string
        example: 912/1
      addressLine2:
        type: string
        example: '5'
      addressLine3:
        type: string
        example: ชิมลม แยก 4
      addressLine4:
        type: string
        example: ''
      addressLine5:
        type: string
        example: ''
      addressLine6:
        type: string
        example: ''
      addressLine7:
        type: string
        example: ''
      addressLine8:
        type: string
        example: ''

      subdistrictName:
        type: string
        example: แขวงวัดอรุณ
      districtName:
        type: string
        example: เขตบางคอแหลม
      provinceName:
        type: string
        example: กรุงเทพ
      countryName:
        type: string
        example: Thailand
      postalCode:
        type: string
        example: '10600'
      addressId:
        type: number
        example: 125
        description: key that will link to address using id/parent id
      enable:
        type: boolean
        example: false
      isDeleted:
        type: boolean
        example: false
    xml:
      name: CustomerAddress
  CustomerContact:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      countryCode:
        type: object
        properties: 
          value: 
            type: "string"
            example: "+66"
          label: 
            type: "string"
            example: Thailand
        description: link to country_code 
      contactNo:
        type: string
        example: 0891172XXX
        description: masking value base on user profile
      channelCodeContactType:
        type: object
        description: link to Channel and contact Type
        properties: 
          value:
            type: string
            enum:
              - PHONE - HOME
              - PHONE - OFFICE
              - PHONE - MOBILE
              - EMAIL
              - FB
              - LINE
              - PANTIP
              - IG
              - SMS
              - WHATSAPP
              - TWITTER
              - GOOGLEPLUS
          label: 
            type: "string"
            example: Thailand
      isMask:
        type: boolean
        example: false
      mask:
        type: string
        description: >-
          it will sow masking value for phone only  (application confgiure will
          configure digits that will use masking in application Confgiure)
        example: (XX) XXX-XXXX
      isDefault:
        type: boolean
        example: false
    xml:
      name: CustomerContact
  CustomerContactPOST-PUT:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      countryCode:
        
        type: string
        example: '+66'
      contactNo:
        type: string
        example: 0891172XXX
        description: masking value base on user profile
      channelCodeContactType:
        type: string
        enum:
          - PHONE - HOME
          - PHONE - OFFICE
          - PHONE - MOBILE
          - EMAIL
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      isDefault:
        type: boolean
        example: false
    xml:
      name: CustomerContact
  CustomerContactPUT:
    type: object
    properties:
      countryCode:
        type: string
        example: '+66'
      contactNo:
        type: string
        example: 0891172XXX
        description: masking value base on user profile
      channelCodeContactType:
        type: string
        enum:
          - PHONE - HOME
          - PHONE - OFFICE
          - PHONE - MOBILE
          - EMAIL
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      isDefault:
        type: boolean
        example: false
    xml:
      name: CustomerContact
  CustomerProperty:
    type: object
    required:
      - customerId
    properties:
      customerId:
        type: string
        example: 'dc6d8408-c53f-4a98-802c-e5efc2fe9023 '
      stringProperty0001:
        type: string
        example: String Value 1
      stringProperty0002:
        type: string
        example: ''
      stringProperty0003:
        type: string
        example: ''
      stringProperty0004:
        type: string
        example: ''
      stringProperty0005:
        type: string
        example: ''
      stringProperty0006:
        type: string
        example: ''
      stringProperty0007:
        type: string
        example: ''
      stringProperty0008:
        type: string
        example: ''
      stringProperty0009:
        type: string
        example: ''
      stringProperty0010:
        type: string
        example: ''
      stringProperty0011:
        type: string
        example: ''
      stringProperty0012:
        type: string
        example: ''
      stringProperty0013:
        type: string
        example: ''
      stringProperty0014:
        type: string
        example: ''
      stringProperty0015:
        type: string
        example: ''
      stringProperty0016:
        type: string
        example: ''
      stringProperty0017:
        type: string
        example: ''
      stringProperty0018:
        type: string
        example: ''
      stringProperty0019:
        type: string
        example: ''
      stringProperty0020:
        type: string
        example: ''
      stringProperty0021:
        type: string
        example: ''
      stringProperty0022:
        type: string
        example: ''
      stringProperty0023:
        type: string
        example: ''
      stringProperty0024:
        type: string
        example: ''
      stringProperty0025:
        type: string
        example: ''
      stringProperty0026:
        type: string
        example: ''
      stringProperty0027:
        type: string
        example: ''
      stringProperty0028:
        type: string
        example: ''
      stringProperty0029:
        type: string
        example: ''
      stringProperty0030:
        type: string
        example: ''
      stringProperty0031:
        type: string
        example: ''
      stringProperty0032:
        type: string
        example: ''
      stringProperty0033:
        type: string
        example: ''
      stringProperty0034:
        type: string
        example: ''
      stringProperty0035:
        type: string
        example: ''
      stringProperty0036:
        type: string
        example: ''
      stringProperty0037:
        type: string
        example: ''
      stringProperty0038:
        type: string
        example: ''
      stringProperty0039:
        type: string
        example: ''
      stringProperty0040:
        type: string
        example: ''
      stringProperty0041:
        type: string
        example: ''
      stringProperty0042:
        type: string
        example: ''
      stringProperty0043:
        type: string
        example: ''
      stringProperty0044:
        type: string
        example: ''
      stringProperty0045:
        type: string
        example: ''
      stringProperty0046:
        type: string
        example: ''
      stringProperty0047:
        type: string
        example: ''
      stringProperty0048:
        type: string
        example: ''
      stringProperty0049:
        type: string
        example: ''
      stringProperty0050:
        type: string
        example: ''
      stringProperty0051:
        type: string
        example: ''
      stringProperty0052:
        type: string
        example: ''
      stringProperty0053:
        type: string
        example: ''
      stringProperty0054:
        type: string
        example: ''
      stringProperty0055:
        type: string
        example: ''
      stringProperty0056:
        type: string
        example: ''
      stringProperty0057:
        type: string
        example: ''
      stringProperty0058:
        type: string
        example: ''
      stringProperty0059:
        type: string
        example: ''
      stringProperty0060:
        type: string
        example: ''
      stringProperty0061:
        type: string
        example: ''
      stringProperty0062:
        type: string
        example: ''
      stringProperty0063:
        type: string
        example: ''
      stringProperty0064:
        type: string
        example: ''
      stringProperty0065:
        type: string
        example: ''
      stringProperty0066:
        type: string
        example: ''
      stringProperty0067:
        type: string
        example: ''
      stringProperty0068:
        type: string
        example: ''
      stringProperty0069:
        type: string
        example: ''
      stringProperty0070:
        type: string
        example: ''
      stringProperty0071:
        type: string
        example: ''
      stringProperty0072:
        type: string
        example: ''
      stringProperty0073:
        type: string
        example: ''
      stringProperty0074:
        type: string
        example: ''
      stringProperty0075:
        type: string
        example: ''
      stringProperty0076:
        type: string
        example: ''
      stringProperty0077:
        type: string
        example: ''
      stringProperty0078:
        type: string
        example: ''
      stringProperty0079:
        type: string
        example: ''
      stringProperty0080:
        type: string
        example: ''
      stringProperty0081:
        type: string
        example: ''
      stringProperty0082:
        type: string
        example: ''
      stringProperty0083:
        type: string
        example: ''
      stringProperty0084:
        type: string
        example: ''
      stringProperty0085:
        type: string
        example: ''
      stringProperty0086:
        type: string
        example: ''
      stringProperty0087:
        type: string
        example: ''
      stringProperty0088:
        type: string
        example: ''
      stringProperty0089:
        type: string
        example: ''
      stringProperty0090:
        type: string
        example: ''
      stringProperty0091:
        type: string
        example: ''
      stringProperty0092:
        type: string
        example: ''
      stringProperty0093:
        type: string
        example: ''
      stringProperty0094:
        type: string
        example: ''
      stringProperty0095:
        type: string
        example: ''
      stringProperty0096:
        type: string
        example: ''
      stringProperty0097:
        type: string
        example: ''
      stringProperty0098:
        type: string
        example: ''
      stringProperty0099:
        type: string
        example: ''
      stringProperty0100:
        type: string
        example: ''
      numberProperty0001:
        type: number
        example: 0
      numberProperty0002:
        type: number
        example: 0
      numberProperty0003:
        type: number
        example: 0
      numberProperty0004:
        type: number
        example: 0
      numberProperty0005:
        type: number
        example: 0
      numberProperty0006:
        type: number
        example: 0
      numberProperty0007:
        type: number
        example: 0
      numberProperty0008:
        type: number
        example: 0
      numberProperty0009:
        type: number
        example: 0
      numberProperty0010:
        type: number
        example: 0
      dateProperty0001:
        type: string
        example: ''
      dateProperty0002:
        type: string
        example: ''
      dateProperty0003:
        type: string
        example: null
      dateProperty0004:
        type: string
        example: ''
      dateProperty0005:
        type: string
        example: ''
      dateProperty0006:
        type: string
        example: ''
      dateProperty0007:
        type: string
        example: ''
      dateProperty0008:
        type: string
        example: ''
      dateProperty0009:
        type: string
        example: ''
      dateProperty0010:
        type: string
        example: ''
    xml:
      name: CustomerProperty
  CustomerPropertyPOST-PUT:
    type: object
    properties:
      stringProperty0001:
        type: string
        example: String Value 1
      stringProperty0002:
        type: string
        example: ''
      stringProperty0003:
        type: string
        example: ''
      stringProperty0004:
        type: string
        example: ''
      stringProperty0005:
        type: string
        example: ''
      stringProperty0006:
        type: string
        example: ''
      stringProperty0007:
        type: string
        example: ''
      stringProperty0008:
        type: string
        example: ''
      stringProperty0009:
        type: string
        example: ''
      stringProperty0010:
        type: string
        example: ''
      stringProperty0011:
        type: string
        example: ''
      stringProperty0012:
        type: string
        example: ''
      stringProperty0013:
        type: string
        example: ''
      stringProperty0014:
        type: string
        example: ''
      stringProperty0015:
        type: string
        example: ''
      stringProperty0016:
        type: string
        example: ''
      stringProperty0017:
        type: string
        example: ''
      stringProperty0018:
        type: string
        example: ''
      stringProperty0019:
        type: string
        example: ''
      stringProperty0020:
        type: string
        example: ''
      stringProperty0021:
        type: string
        example: ''
      stringProperty0022:
        type: string
        example: ''
      stringProperty0023:
        type: string
        example: ''
      stringProperty0024:
        type: string
        example: ''
      stringProperty0025:
        type: string
        example: ''
      stringProperty0026:
        type: string
        example: ''
      stringProperty0027:
        type: string
        example: ''
      stringProperty0028:
        type: string
        example: ''
      stringProperty0029:
        type: string
        example: ''
      stringProperty0030:
        type: string
        example: ''
      stringProperty0031:
        type: string
        example: ''
      stringProperty0032:
        type: string
        example: ''
      stringProperty0033:
        type: string
        example: ''
      stringProperty0034:
        type: string
        example: ''
      stringProperty0035:
        type: string
        example: ''
      stringProperty0036:
        type: string
        example: ''
      stringProperty0037:
        type: string
        example: ''
      stringProperty0038:
        type: string
        example: ''
      stringProperty0039:
        type: string
        example: ''
      stringProperty0040:
        type: string
        example: ''
      stringProperty0041:
        type: string
        example: ''
      stringProperty0042:
        type: string
        example: ''
      stringProperty0043:
        type: string
        example: ''
      stringProperty0044:
        type: string
        example: ''
      stringProperty0045:
        type: string
        example: ''
      stringProperty0046:
        type: string
        example: ''
      stringProperty0047:
        type: string
        example: ''
      stringProperty0048:
        type: string
        example: ''
      stringProperty0049:
        type: string
        example: ''
      stringProperty0050:
        type: string
        example: ''
      stringProperty0051:
        type: string
        example: ''
      stringProperty0052:
        type: string
        example: ''
      stringProperty0053:
        type: string
        example: ''
      stringProperty0054:
        type: string
        example: ''
      stringProperty0055:
        type: string
        example: ''
      stringProperty0056:
        type: string
        example: ''
      stringProperty0057:
        type: string
        example: ''
      stringProperty0058:
        type: string
        example: ''
      stringProperty0059:
        type: string
        example: ''
      stringProperty0060:
        type: string
        example: ''
      stringProperty0061:
        type: string
        example: ''
      stringProperty0062:
        type: string
        example: ''
      stringProperty0063:
        type: string
        example: ''
      stringProperty0064:
        type: string
        example: ''
      stringProperty0065:
        type: string
        example: ''
      stringProperty0066:
        type: string
        example: ''
      stringProperty0067:
        type: string
        example: ''
      stringProperty0068:
        type: string
        example: ''
      stringProperty0069:
        type: string
        example: ''
      stringProperty0070:
        type: string
        example: ''
      stringProperty0071:
        type: string
        example: ''
      stringProperty0072:
        type: string
        example: ''
      stringProperty0073:
        type: string
        example: ''
      stringProperty0074:
        type: string
        example: ''
      stringProperty0075:
        type: string
        example: ''
      stringProperty0076:
        type: string
        example: ''
      stringProperty0077:
        type: string
        example: ''
      stringProperty0078:
        type: string
        example: ''
      stringProperty0079:
        type: string
        example: ''
      stringProperty0080:
        type: string
        example: ''
      stringProperty0081:
        type: string
        example: ''
      stringProperty0082:
        type: string
        example: ''
      stringProperty0083:
        type: string
        example: ''
      stringProperty0084:
        type: string
        example: ''
      stringProperty0085:
        type: string
        example: ''
      stringProperty0086:
        type: string
        example: ''
      stringProperty0087:
        type: string
        example: ''
      stringProperty0088:
        type: string
        example: ''
      stringProperty0089:
        type: string
        example: ''
      stringProperty0090:
        type: string
        example: ''
      stringProperty0091:
        type: string
        example: ''
      stringProperty0092:
        type: string
        example: ''
      stringProperty0093:
        type: string
        example: ''
      stringProperty0094:
        type: string
        example: ''
      stringProperty0095:
        type: string
        example: ''
      stringProperty0096:
        type: string
        example: ''
      stringProperty0097:
        type: string
        example: ''
      stringProperty0098:
        type: string
        example: ''
      stringProperty0099:
        type: string
        example: ''
      stringProperty0100:
        type: string
        example: ''
      numberProperty0001:
        type: number
        example: 0
      numberProperty0002:
        type: number
        example: 0
      numberProperty0003:
        type: number
        example: 0
      numberProperty0004:
        type: number
        example: 0
      numberProperty0005:
        type: number
        example: 0
      numberProperty0006:
        type: number
        example: 0
      numberProperty0007:
        type: number
        example: 0
      numberProperty0008:
        type: number
        example: 0
      numberProperty0009:
        type: number
        example: 0
      numberProperty0010:
        type: number
        example: 0
      dateProperty0001:
        type: string
        example: ''
      dateProperty0002:
        type: string
        example: ''
      dateProperty0003:
        type: string
        example: null
      dateProperty0004:
        type: string
        example: ''
      dateProperty0005:
        type: string
        example: ''
      dateProperty0006:
        type: string
        example: ''
      dateProperty0007:
        type: string
        example: ''
      dateProperty0008:
        type: string
        example: ''
      dateProperty0009:
        type: string
        example: ''
      dateProperty0010:
        type: string
        example: ''
    xml:
      name: CustomerProperty
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: string
        format: uuid
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      userGroup:
        type: string
    xml:
      name: User
  InteractionInfoList:
    type: object
    properties:
      id:
        type: string
        example: 07bad9cd-8847-4de6-b2b8-3dca46f3a0f8
        description: Interaction_id
      customerContactId:
        type: string
        example: 0c35f87d-376c-43ef-9061-588872005eea
        description: Customer_contact_id
      customerId:
        type: string
        example: 0c35f87d-376c-43ef-9061-588872005eea
        description: Customer_id
      channelCode:
        type: string
        example: LINE
        description: channel_code
      interactionAccountName:
        type: string
        example: Terrabit Line
        description: channel_code
      interactionName:
        type: string
        example: Kittiporn aree
        description: >-
          if customerClassify = single, customer_name. if
          customerClassify=Unknown, show Unknown Customer. if
          customerClassify=Multi, show Multiple Customer
      customertype:
        type: string
        example: customer
        description: customer_type.name
      customerClassify:
        type: string
        example: Single
        description: >-
          Single = when found single in system, Multi = when found multiple
          customer, Unknown = when Can not find customer
      interationDirection:
        type: string
        example: IN
        description: 'IN = Inbound interaction, OUT = Outbound interaction'
      customerImage:
        type: string
        example: ''
        description: customer.image
      customerAbbr:
        type: string
        example: null
        description: customer.abbr
      customerAbbrColor:
        type: string
        example: null
        description: customer.abbr_color_id
      shortbody:
        type: string
        example: Show First 100 Charactors of Message include Subject for Email
        description: >-
          EMAIL Subject + Contents , CHAT = Contents , Post = Subject +
          contenets (Only 100 Char)
      hasAttachment:
        type: boolean
        example: false
        description: has_attachment
      status:
        type: string
        example: assign
        description: status
      state:
        type: string
        example: assign
        description: status
      createDate:
        type: string
        example: '2012-04-23T18:25:43.511'
        description: create Interaction Date
      updateDate:
        type: string
        example: '2012-04-23T18:25:43.511'
        description: update Interaction Date
      interactionFlag:
        type: boolean
        example: true
        description: flag
      assignTo:
        type: string
        example: Me - Team
        description: >-
          if team = null, show user_ruamitr.name, if team <> null and user_id =
          null, show "Team:" team.name, if team <> null and user_id <> null,
          show user_ruamitr.name + - + team.name if userID form paramter =
          user_id, it will show Me
      teamID:
        type: string
        example: 0c35f87d-376c-43ef-9061-588872005e11
        description: teamID
      userID:
        type: string
        example: 0c35f87d-376c-43ef-9061-588872005e11
        description: user_ruamitr.user_id
      tag:
        type: array
        items:
          $ref: '#/definitions/TagName'
  InteractionActivity:
    type: object  
    properties:
      interactionDate:
        type: string
        example: '2018-08-31T09:28:43.511'
      interactionDirection:
        type: string
        example: IN
      channelCode:
        type: string
        example: PHONE
      hasAttachment:
        type: boolean
        example: false
      ivrMenu:
        type: string
        example: 'Inquiry '
      ivrDuration:
        type: number
        example: 20
      queueTime:
        type: number
        example: 45
      interactionUserName:
        type: string
        example: CSR081
      interactionRelatedActivity:
        properties:
          module:
            type: string
            example: case
          refNo:
            type: string
            example: CC-61-0115
          subject:
            type: string
            example: Request | Change Password | User Lock.....
          id:
            type: string
            example: fbacd904-ff8f-11e8-8eb2-f2801f1b9fd1
          priority:
            type: string
            example: 'http://maxar-111/'
          activityType:
            type: string
            example: Create Case
          updateDate:
            type: string
            example: '2018-08-31T09:32:43.511'
          updateBy:
            type: string
            example: CSR081
          description:
            type: string
            example: Please re activate password for user...
          tag:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  example: In-progress
                value:
                  type: string
                  example: HQ Back Office
                description:
                  type: string
                  example: ''
          overSlaAccept:
            type: boolean
            example: false
          overSlaResponse:
            type: boolean
            example: false
          overSlaClose:
            type: boolean
            example: false
          allowFollow:
            type: boolean
            example: false
        type: object
  InteractionHistory:
    type: object
    required:
      - points
    properties:
      points:
        type: array
        items:
          type: object
          properties:
            groupName:
              type: string
              example: '2018-07-31T00:00:00.000'
            items:
              type: array
              items:
                type: object
                properties:
                  interactionId:
                    type: string
                    example: 39011c4a-8e55-11e8-9eb6-529269fb1459
                  subject:
                    type: string
                    example: Inquiry Prodcut PDF-123a
                  shortBody:
                    type: string
                    example: 'Dear Support, i neeed you help for product'
                  interationDirection:
                    type: string
                    example: IN
                  channelCode:
                    type: string
                    example: EMAIL
                  interactionDate:
                    type: string
                    example: '2018-07-31T07:28:00.543'
                  hasAttachment:
                    type: boolean
                    example: true
                  assignTo:
                    type: string
                    example: CSR0185
                  tag:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Completed
                        value:
                          type: string
                          example: Completed
                        description:
                          type: string
                          example: Contact Result Level 1 | contact Restul Level 2
                          
  MessageContentEmail:
    type: object  
    properties: 
      id: 
        type: "string"
        example: "832901830921"
        description: ID of mongo DB 
      type: 
        type: "string"
        example: "IN"
        description: Email direction Type 
        enum:
        - IN
        - OUt
        - REPLY
        - FORWARD
      from: 
        type: "string"
        example: "nacho@outlook.com"
      to: 
        type: "string"
        example: "sale@abc.com"
      cc: 
        type: "string"
        example: "nacho@gmail.com"
      bcc: 
        type: "string"
        example: "user@example.com"
      subject: 
        type: "string"
        example: "Sale Order Inquiry"
      Content: 
        type: "string"
        example: "some html text"
      attachment: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1
              description: ID that will refenrence to Attchament file 
            name: 
              type: "string"
              example: "aa.txt"
            uri: 
              type: "string"
              example: "/aaa-2081091.txt"
            size: 
              type: "string"
              example: "100 KB"
            mimeType: 
              type: "string"
              example: "text/plain"
  MessageContentPostSend:  
    type: object 
    properties: 
      parentMessageId:
        type: "string"
        example: "1811904282261806_1811904905595077"
      type: 
        type: "string"
        example: "text"
        enum:
        - text
        - attachment
      text: 
        type: "string"
        example: ""
        description: Text Message of Chat
      attchment: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1
            name: 
              type: "string"
              example: "aa.txt"
            uri: 
              type: "string"
              example: "/aaa-2081091.txt"
            size: 
              type: "string"
              example: "100 KB"
            extension: 
              type: "string"
              example: "txt"
  MessageContentPost:  
    type: object  
    properties: 
      messageId:
        type: "string"
        example: "1811904282261806_1811901105595077"
      parentMessageId:
        type: "string"
        example: "1811904282261806_1811904905595077"
      contactName: 
        type: "string"
        example: "@ABCLineFB"
      status: 
        type: "string"
        example: "error"
        enum:
        - ERROR
        - SENDING
        - OK
      contactDate: 
        type: "string"
        example: 2018-08-31T09:28:43.511
      type: 
        type: "string"
        example: "text"
        enum:
        - text
        - attachment
      text: 
        type: "string"
        example: ""
        description: Text Message of Chat
      attchment: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1
            name: 
              type: "string"
              example: "aa.txt"
            uri: 
              type: "string"
              example: "/aaa-2081091.txt"
            size: 
              type: "string"
              example: "100 KB"
            extension: 
              type: "string"
              example: "txt"              
  MessageContentChatSend:  
    type: object  
    properties: 
      type: 
        type: "string"
        example: "attchments"
        enum:
        - text
        - attachment
      text: 
        type: "string"
        example: ""
        description: Text Message of Chat
      attchment: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1
            name: 
              type: "string"
              example: "aa.txt"
            uri: 
              type: "string"
              example: "/aaa-2081091.txt"
            size: 
              type: "string"
              example: "100 KB"
            extension: 
              type: "string"
              example: "txt"
              
  MessageContentChat:  
    type: object  
    properties: 
      contactName: 
        type: "string"
        example: "@ABCLine"
      direction: 
        type: "string"
        example: "OUT"
        enum:
        - IN
        - OUT
      status: 
        type: "string"
        example: "error"
        enum:
        - ERROR
        - SENDING
        - OK
      contactDate: 
        type: "string"
        example: null
      type: 
        type: "string"
        example: "attchments"
        enum:
        - text
        - attachment
      text: 
        type: "string"
        example: ""
      attchment: 
        type: "array"
        items: 
          type: "object"
          properties: 
            id: 
              type: "number"
              example: 1
            name: 
              type: "string"
              example: "aa.txt"
            uri: 
              type: "string"
              example: "/aaa-2081091.txt"
            size: 
              type: "string"
              example: "100 KB"
            extension: 
              type: "string"
              example: "txt"

  InteractionEmailInfo:
    type: object  
    properties:
 
      id:
        type: string
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      customerContactId:
        type: string
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactRefNo:
        type: string
        example: M239210-23
      customerId:
        type: string
        example: 390122bc-8e55-11e8-9eb6-529269fb1459
      channelCode:
        type: string
        example: EMAIL
      interactionAccountName:
        type: string
        example: ABCLine
      interactionName:
        type: string
        example: Apichat Somjainuk
      customerType:
        type: string
        example: Customer
      customerClassify:
        type: string
        example: Single
      interactionContactName:
        type: string
        example: apichats@gmail.com
      interationDirection:
        type: string
        example: IN
      customerImage:
        type: string
        example: 'http://maxar/3281093fdsjlkfds'
      customerAbbr:
        type: string
        example: AS
      customerAbbrColor:
        type: string
        example: '#1ABC9C'
      hasAttachment:
        type: boolean
        example: true
      status:
        type: string
        example: Closed
      state:
        type: string
        example: Completed
      stateDate:
        type: string
        example: '2018-11-02T04:29:19.150'
      isRead:
        type: boolean
        example: true
      createDate:
        type: string
        example: '2018-07-30T04:29:19.150'
      updateDate:
        type: string
        example: '2018-08-01T11:24:19.150'
      interactionFlag:
        type: boolean
        example: true
      assignTo:
        type: string
        example: CSR0185
      isReadOnly:
        type: boolean
        example: true
      allowIgnore:
        type: boolean
        example: false
      isTransfer:
        type: boolean
        example: false
      tag:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              example: Completed
            value:
              type: string
              example: Completed
            description:
              type: string
              example: Contact Result Level 1 | contact Restul Level 2
      messageContent:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: 85480358-0f28-11e9-ab14-d663bd873d93
            direction:
              type: string
              example: REPLY
            from:
              type: string
              example: sale@abc.com
            to:
              type: string
              example: Apichat Somjaimuk <apichats@gmail.com>
            cc:
              type: string
              example: 'Somporn S. <somporns@gmail.com>, contact <contact@ABCD.com>'
            bcc:
              type: string
              example: user@example.com
            subject:
              type: string
              example: Sale Order Inquiry
            Content:
              type: string
              example: some html text
            createDate:
              type: string
              example: '2018-07-30T04:29:19.150'
            hasAttachment:
              type: boolean
              example: true
            attachments:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: aa.txt
                  uri:
                    type: string
                    example: 'http://maxar1/32190-321'
                  size:
                    type: string
                    example: 100 KB
                  mimeType:
                    type: string
                    example: text/plain
  InteractionChatInfo:
    type: object  
    description: '123'
    properties:
      id:
        type: string
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactId:
        type: string
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactRefNo:
        type: string
        example: C-20101928
      customerId:
        type: string
        example: 390122bc-8e55-11e8-9eb6-529269fb1459
      channelCode:
        type: string
        example: LINE
      interactionAccountName:
        type: string
        example: ABCLine
      interactionName:
        type: string
        example: Apichat Somjainuk
      customerType:
        type: string
        example: Customer
      customerClassify:
        type: string
        example: Single
      interactionContactName:
        type: string
        example: '@apichat'
      interationDirection:
        type: string
        example: IN
      customerImage:
        type: string
        example: 'http://maxar/3281093fdsjlkfds'
      customerAbbr:
        type: string
        example: AS
      customerAbbrColor:
        type: string
        example: '#1ABC9C'
      hasAttachment:
        type: boolean
        example: true
      status:
        type: string
        example: Pending
      state:
        type: string
        example: Completed
      stateDescription:
        type: string
        example: Contact Result Level 1 | contact Restul Level 2
      stateDate:
        type: string
        example: '2018-11-02T04:29:19.150'
      isRead:
        type: boolean
        example: true
      createDate:
        type: string
        example: '2018-11-02T04:29:19.150'
      updateDate:
        type: string
        example: '2018-11-02T04:29:19.150'
      interactionFlag:
        type: boolean
        example: true
      assignTo:
        type: string
        example: CSR0185
      isReadOnly:
        type: boolean
        example: true
      allowIgnore:
        type: boolean
        example: false
      isTransfer:
        type: boolean
        example: false
      tag:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              example: Completed
            value:
              type: string
              example: Completed
            description:
              type: string
              example: Contact Result Level 1 | contact Restul Level 3
      messageContent:
        type: array
        items:
          type: object
          properties:
            contactName:
              type: string
              example: '@Apichat'
            direction:
              type: string
              example: IN
            type:
              type: string
              example: text
            status:
              type: string
              example: Closed
            contactDate:
              type: string
              example: '2018-11-02T04:29:19.150'
            text:
              type: string
              example: Greeting Customer Support
            attachments:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  name:
                    type: string
                    example: aa.txt
                  uri:
                    type: string
                    example: 'http://maxar1/32190-321'
                  size:
                    type: string
                    example: 100 KB
                  mimeType:
                    type: string
                    example: text/plain
  TagName:
    type: object
    properties:
      name:
        type: string
        example: Transfer
        description: 'if state = null use, status.tag_name else state.tag_name'
        enum:
          - Draft
          - New
          - Assigned
          - In-progress
          - Pending
          - Waiting
          - Completed
          - Closed
          - Canceled
          - Error
          - Transfer
      value:
        type: string
        example: Transfer
        description: 'if state = null use, status.name else state.name'
      description:
        type: string
        example: Follow up with customer
        description: >-
          if status = close, Contat_result_name LV1 |Contat_result_name Level 2
          |Contat_result_name Level 3(self join to get parentid)
  Tags:
    type: array
    items:
      $ref: '#/definitions/Tag'
    example:
      - id: 1
        name: Refund
      - id: 2
        name: Payment Method
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  new-list-interaction:
    type: object
    properties:
      id:
        type: string
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactId:
        type: string
        example: 39011c4a-8e55-11e8-9116-529269fb1459
      customerId:
        type: string
        example: 39011c4a-8e55-11e8-91b6-529269fb1459
      channelCode:
        type: string
        example: EMAIL
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      interActionAccountName:
        type: string
        example: ABC Hotline
      interactionName:
        type: string
        example: Apichat Somjainuk - VIP
      customerType:
        type: string
        description: 'Customer Type that will link to customer_type '
        enum:
          - Customer
          - VIP
      customerClassify:
        type: string
        description: ''
        enum:
          - Single
          - Multi
          - Unknown
      createDate:
        type: string
        example: '2018-07-26T08:59:33.188'
      shortBody:
        type: string
        example: >-
          Dear Support I need your Help about Sale order that i purchase last
          week
        description: 'Show First 150 Charactors of Message combine with Subject: content'
      hasAttachment:
        type: boolean
        example: true
      interactionFlag:
        type: boolean
        example: false
      customerImage:
        type: string
        example: /customer/89302180321/profile.jpg
      customerAbbr:
        type: string
        example: AS
      customerAbbrColor:
        type: string
        example: '#1ABC9C'
      status:
        type: string
        enum:
          - New
          - Assigned
          - In-Progress
          - Pending
          - Closed
      state:
        type: string
        enum:
          - Opened
          - Draft
          - Approving
          - Wrap-Up
          - Error
          - Completed
          - Ignored
        default: blank
      isTeamAssign:
        type: boolean
        example: true
      assignTo:
        type: string
        example: 'Team: VIP'
      contactDirection:
        type: string
        example: In
        enum:
          - In
          - Out
      tag:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: Transfer
    xml:
      name: new-list-interaction
  list-interaction:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactId:
        type: string
        format: uuid
        example: 39012046-8e55-11e8-9eb6-529269fb1459
      customerId:
        type: string
        format: uuid
        example: 390122bc-8e55-11e8-9eb6-529269fb1459
      channelCode:
        type: string
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      interActionAccountName:
        type: string
        example: ABC Hotline
      interactionName:
        type: string
        example: Apichat Somjainuk
      customerType:
        type: string
        enum:
          - Customer
          - VIP
      customerClassify:
        type: string
        enum:
          - Single
          - Multi
          - Unknown
      interactionContactName:
        type: string
        example: apichat@gmail.com
      interationDirection:
        type: string
        enum:
          - Reply
          - Post
          - In
          - Out
      customerImage:
        type: string
        example: /customer/89302180321/profile.jpg
      customerAbbr:
        type: string
        example: AS
      customerAbbrColor:
        type: string
        example: '#1ABC9C'
      subject:
        type: string
        example: 'Last IVR: Inquiry'
      shortbody:
        type: string
        description: Show First 500 Charactors of Message
        example: >-
          Dear Support I need your Help about Sale order that i purchase last
          week
      hasAttachment:
        type: boolean
      status:
        type: string
        enum:
          - Assign
          - Opend
          - Pending
          - Closed
      state:
        type: string
        enum:
          - Draft
          - Waiting
          - Sending
          - Ignore
        default: blank
      isRead:
        type: boolean
      createDate:
        type: string
        format: date-time
        example: '2018-07-26T08:59:33.188'
      updateDate:
        type: string
        format: date-time
        example: '2018-07-26T08:59:33.188'
      interactionFlag:
        type: boolean
      assignTo:
        type: string
        example: Agent1
    xml:
      name: list-interaction
  interactionChat:
    type: object
    description: still devlopment
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactId:
        type: string
        format: uuid
        example: 39012046-8e55-11e8-9eb6-529269fb1459
      customerId:
        type: string
        format: uuid
        example: 390122bc-8e55-11e8-9eb6-529269fb1459
      channelcode:
        type: string
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      interActionAccountName:
        type: string
        example: ABC Hotline
      interactionName:
        type: string
        example: Apichat Somjainuk
      customertype:
        type: string
        enum:
          - Customer
          - VIP
      customerClassify:
        type: string
        enum:
          - Single
          - Multi
          - Unknown
      interactionContactName:
        type: string
        example: apichat@gmail.com
      interationDirection:
        type: string
        enum:
          - Reply
          - Post
          - In
          - Out
      customerImage:
        type: string
        example: /customer/89302180321/profile.jpg
      customerAbbr:
        type: string
        example: AS
      customerAbbrColor:
        type: string
        example: '#1ABC9C'
      hasAttachment:
        type: boolean
      status:
        type: string
        enum:
          - Assign
          - Opend
          - Pending
          - Closed
      state:
        type: string
        enum:
          - Draft
          - Waiting
          - Sending
          - Ignore
        default: ''
      isRead:
        type: boolean
      createDate:
        type: string
        format: date-time
      updateDate:
        type: string
        format: date-time
      interactionFlag:
        type: boolean
      assignTo:
        type: string
        example: Agent1
      MessageContent:
        $ref: '#/definitions/EmailMessage'
    xml:
      name: interactionChat
  interactionEmail:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactId:
        type: string
        format: uuid
        example: 39012046-8e55-11e8-9eb6-529269fb1459
      customerId:
        type: string
        format: uuid
        example: 390122bc-8e55-11e8-9eb6-529269fb1459
      channelcode:
        type: string
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      interActionAccountName:
        type: string
        example: ABC Hotline
      interactionName:
        type: string
        example: Apichat Somjainuk
      customertype:
        type: string
        enum:
          - Customer
          - VIP
      customerClassify:
        type: string
        enum:
          - Single
          - Multi
          - Unknown
      interactionContactName:
        type: string
        example: apichat@gmail.com
      interationDirection:
        type: string
        enum:
          - Reply
          - Post
          - In
          - Out
      customerImage:
        type: string
        example: /customer/89302180321/profile.jpg
      customerAbbr:
        type: string
        example: AS
      customerAbbrColor:
        type: string
        example: '#1ABC9C'
      hasAttachment:
        type: boolean
      status:
        type: string
        enum:
          - Assign
          - Opend
          - Pending
          - Closed
      state:
        type: string
        enum:
          - Draft
          - Waiting
          - Sending
          - Ignore
        default: ''
      isRead:
        type: boolean
      createDate:
        type: string
        format: date-time
      updateDate:
        type: string
        format: date-time
      interactionFlag:
        type: boolean
      assignTo:
        type: string
        example: Agent1
      MessageContent:
        $ref: '#/definitions/EmailMessage'
    xml:
      name: interactionEmail
  InteractionTime:
    type: object
    properties:
      enableCounter:
        type: boolean
        description: True will display as counter to increase time
        example: true
      currentState:
        type: string
        enum:
          - ACTIVE
          - HOLD
          - WRAP
        example: WRAP
      currentDuration:
        type: number
        example: 112
      warningDuration:
        type: number
        example: 200
      overDueDuration:
        type: number
        example: 300
  Pagination:
    type: object
    properties:
      limit:
        type: integer
        example: '25'
        description: number of record that display per page
      previouspage:
        type: integer
        example: '1'
        description: index of Previous page (0 No Previous Page)
      nextpage:
        type: integer
        example: '3'
        description: index of Next page (0 No Next Page)
      currentpage:
        type: integer
        example: '2'
        description: index of Current page (Default is 1)
      pagecount:
        type: integer
        example: '40'
        description: 'Number of Page '
      totalcount:
        type: integer
        example: '1000'
        description: 'Number of Records '
    xml:
      name: Pagination
  Metadata:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
    xml:
      name: Metadata
  list-contacts:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      contactNo:
        type: string
        example: 0891172170
      channelCode:
        type: string
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      contactType:
        type: string
        enum:
          - Home
          - Office
          - Mobile
    xml:
      name: list-contacts
  list-campaigns:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      name:
        type: string
        example: campaign Surveys
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
    xml:
      name: list-campaigns
  list-schedules:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      refNo:
        type: string
        example: '#32178932'
      refType:
        type: string
        enum:
          - cases
          - campaigns
          - customer
        example: cases
      subject:
        type: string
        example: Follow up
      description:
        type: string
        example: ''
      scheduleDate:
        type: string
        format: date-time
    xml:
      name: list-schedules
  list-cases:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      refNo:
        type: string
        example: CC-61-04-00017
      channelCode:
        type: string
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      priority:
        type: string
        enum:
          - Immediate
          - High
          - Medium
          - Low
      status:
        type: string
        enum:
          - New
          - Draft
          - Opend
          - Pending
          - Hold
          - Resolution
          - Closed
          - Cancel
      caseTypeText:
        type: string
        example: Change Password | Reget Password
      serviceTypeText:
        type: string
        example: Area A| Location B
      description:
        type: string
        example: Reset password that will login to customer portal
      createDate:
        type: string
        format: date-time
      createBy:
        type: string
        example: Agent 1
      activityType:
        type: string
        enum:
          - Memo
          - Delegate Task
          - Follow Case
          - Quick Case
      activityDescription:
        type: string
      activityDate:
        type: string
        format: date-time
      activityBy:
        type: string
        example: Agent 1
      delegateTo:
        type: string
        example: IT Support
      slaClosedFlag:
        type: boolean
      slaAcceptFlag:
        type: boolean
      customerName:
        type: string
        example: Somchai Rodprom
      caseFlag:
        type: boolean
    xml:
      name: list-cases
  list-saleHistory:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      refNo:
        type: string
        example: '#32178932'
      productName:
        type: string
      content:
        type: string
      saleDate:
        type: string
        format: date-time
    xml:
      name: list-saleHistory
  group-list-interactionHistory:
    type: object
    properties:
      groupName:
        type: string
        example: '2018-07-31'
      items:
        type: array
        items:
          $ref: '#/definitions/list-interactionHistory'
  list-interactionHistory:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 39011c4a-8e55-11e8-9eb6-529269fb1459
      subject:
        type: string
        example: Inquiry Prodcut PDF-123a
      shortBody:
        type: string
        example: 'Dear Support, i neeed you help for product'
      channelcode:
        type: string
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      status:
        type: string
        enum:
          - Assign
          - Opend
          - Pending
          - Closed
        example: Closed
      state:
        type: string
        enum:
          - Draft
          - Waiting
          - Sending
          - Ignore
        example: Ignore
      interactionDate:
        type: string
        format: date-time
      hasAttachment:
        type: boolean
      contactResultText:
        type: string
        example: Inquiry|Product
      assignTo:
        type: string
        example: Agent1
    xml:
      name: list-interactionHistory
  EmailMessage:
    type: object
    properties:
      id:
        type: string
        format: uuid
      from:
        type: string
        format: email
        example: nacho@outlook.com
      to:
        type: string
        format: email
        example: sale@abc.com
      cc:
        type: string
        format: email
        example: nacho@gmail.com
      bcc:
        type: string
        format: email
      subject:
        type: string
        example: Sale Order Inquiry
      Content:
        type: string
        example: some html text
      attachment:
        $ref: '#/definitions/Attachments'
    xml:
      name: EmailMessage
  CustomerInfoLayout:
    type: object
    properties:
      id:
        type: number
        example: 1
      label:
        type: string
        example: Cutomer ID
      type:
        type: string
        example: string
      value:
        type: string
        example: '1882901'
      isMask:
        type: boolean
        example: false
    xml:
      name: CustomerInfoLayout
  CustomerContactInfoLayout:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: 1
      countryCode:
        type: string
        example: +66
      contactNo:
        type: string
        example: 0891172XXX
      channelCodeContactType:
        type: string
        example: PHONE - HOME
      isMask:
        type: boolean
        example: false
      mask:
        type: string
        example: (XX) XXX-XXXX
      isDefault:
        type: boolean
        example: true
    xml:
      name: CustomerContactInfoLayout
  Contacts:
    type: object
    properties:
      id:
        type: string
        format: uuid
      channelCode:
        type: string
      phoneType:
        type: string
      contactNumber:
        type: string
    xml:
      name: Contacts
  list-Notes:
    type: object
    properties:
      id:
        type: string
        format: uuid
      shortContent:
        type: string
        example: This is a agent Note
      createDate:
        type: string
        format: date-time
    xml:
      name: list-News
  list-News:
    type: object
    properties:
      id:
        type: string
        format: uuid
      shortContent:
        type: string
        example: Welcome to the Ruamitr News....
      newsImage:
        type: string
        example: /news/89302180321/profile.jpg
      createDate:
        type: string
        format: date-time
    xml:
      name: list-News
  calendar:
    type: object
    properties:
      id:
        type: string
        format: uuid
      refNo:
        type: string
        example: x1432190-1
      module:
        type: string
        enum:
          - interaction
          - cases
          - opportunities
      subject:
        type: string
        example: call to customer
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
    xml:
      name: calendar
  kpi-statistic:
    type: object
    properties:
      kpiName:
        type: string
        example: Total Contact
      Value:
        type: string
        example: '7'
      displaytemplate:
        type: integer
    xml:
      name: kpi-statistic
  MetadataHeader:
    type: object
    properties:
      colIndex:
        type: integer
      colType:
        type: string
        enum:
          - none
          - string
          - date
          - date-time
          - boolean
      colName:
        type: string
    xml:
      name: MetadataHeader
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
        
  knowledgeBaseView:
    type: object
    properties:
      id:
        type: string
        format: UUID
        example: 085acb54-1234-4c8f-8ec7-ea2346d62118
      name:
        type: string
        example: Refund
      status:
        type: string
        description: Link to knowledge base status
        enum:
          - new
          - wating
          - apprvoed
        example: apprvoed
      usedCount:
        type: integer
        example: 0 
      starContent:
        type: boolean
        example: false
      updateDate:
        type: string
        format: date
        example: '2013-10-21T13:28:06.419'
      updateBy:
        type: string
        example: Nichi
      kbContent:
        $ref: '#/definitions/KBcontentAnchor'
      urlLink:
        type: array
        items:
          type: object
          properties:
            linkName:
              type: string
              example: ABC corp profile
            linkUrl:
              type: string
              format: uri
              example: 'http://ABC.com'
      attachment:
        $ref: '#/definitions/Attachments'
      tag:
        $ref: '#/definitions/Tags'
      owner: 
        type: object
        properties:
          value:
            type: string
            example: CO1
          label:
            type: string
            example: Company 1
          hasDescription:
            type: boolean
            example: false
  knowledgeBase:
    type: object
    properties:
      id:
        type: string
        format: UUID
      name:
        type: string
      status:
        type: string
        enum:
          - New
          - Wait for Approval
          - Approval
      scope:
        type: string
        enum:
          - internal
          - external
      starContent:
        type: boolean
      version:
        type: string
      kbContent:
        $ref: '#/definitions/KBcontent'
      urlLink:
        type: array
        items:
          type: object
          properties:
            linkName:
              type: string
              example: ABC corp profile
            linkUrl:
              type: string
              format: uri
              example: 'http://ABC.com'
      startDate:
        type: string
        format: datetime
        example: '2013-10-21T13:28:06.419'
      endDate:
        type: string
        format: datetime
        example: '2013-10-21T13:28:06.419'
      usedCount:
        type: integer
      createDate:
        type: string
        format: date
        example: '2013-10-21T13:28:06.419'
      createBy:
        type: string
        example: Nichi
      updateDate:
        type: string
        format: date
        example: '2013-10-21T13:28:06.419'
      updateBy:
        type: string
        example: Nichi
      approvalDate:
        type: string
        format: date
        example: '2013-10-21T13:28:06.419'
      approvalBy:
        type: string
        example: Nichi
      enable:
        type: boolean
        example: 'true'
      isdeleted:
        type: boolean
        example: 'true'
      isleaf:
        type: boolean
        example: 'true'
      hasAttacment:
        type: boolean
        example: 'true'
      parentId:
        type: string
        example: UUID
      attachment:
        $ref: '#/definitions/Attachments'
      tag:
        $ref: '#/definitions/Tags'
  KBcontents:
    type: array
    items:
      $ref: '#/definitions/KBcontent'
    example:
      - id: 1
        sectionName: Require Infomation
        content: In at lorem quam. C
      - id: 2
        sectionName: Payment Medthod
        content: In at lorem quam
      - id: 3
        sectionName: Payment Channel
        content: 'In at lorem quam. Curabitur in massa tristique, laoreet qua'
  KBcontent:
    type: object
    properties:
      id:
        type: integer
        format: int32
      sectionName:
        type: string
        example: section1
      sectionLabel:
        type: string
        example: Payment Medthod
      sectionContent:
        type: string
        example: >-
          <p><b><font color='#F69'>Require Infomation</font></b></p>Contrary to
          popular belief, Lorem Ipsum is not simply random text. It has roots in
          a piece of classical Latin literature from 45 BC, making it over 2000
          years old. Richard McClintock, a Latin professor at Hampden-Sydney
          College in Virginia, looked up one of the more obscure Latin words,
          consectetur, from a Lorem Ipsum passage, and going through the cites
          of the word in classical literature<br /><br />Contrary to popular
          belief, Lorem Ipsum is not simply random text. It has roots in a piece
          of classical Latin literature from 45 BC, making it over 2000 years
          old. Richard McClintock, a Latin professor at Hampden-Sydney College
          in Virginia, looked up one of the more obscure Latin words,
          consectetur, from a Lorem Ipsum passage, and going through the cites
          of the word in classical literatureContrary to popular belief, Lorem
          Ipsum is not simply random text. It has roots in a piece of classical
          Latin literature from 45 BC, making it over 2000 years old. Richard
          McClintock, a Latin professor at Hampden-Sydney College in Virginia,
          looked up one of the more obscure Latin words, consectetur, from a
          Lorem Ipsum passage, and going through the cites of the word in
          classical literature<br /><br />Contrary to popular belief, Lorem
          Ipsum is not simply random text. It has roots in a piece of classical
          Latin literature from 45 BC, making it over 2000 years old. Richard
          McClintock, a Latin professor at Hampden-Sydney College in Virginia,
          looked up one of the more obscure Latin words, consectetur, from a
          Lorem Ipsum passage, and going through the cites of the word in
          classical literature</div><br/><br/><br/>
  KBcontentAnchor:
    type: object
    properties:
      section:
        type: array
        items:
          $ref: '#/definitions/KBcontentAnchorSection'
        example:
          - id: 1
            sectionName: section 1
            sectionLabel: Require Infomation
          - id: 2
            sectionName: section 2
            sectionLabel: Payment Medthod
          - id: 3
            sectionName: section 3
            sectionLabel: 'In at lorem quam. Curabitur in massa tristique, laoreet qua'
      content:
        type: string
        example: >-
          <p><a name='section 1'></a> Section 1</p> <p> Cras gravida vel ex at
          consectetur. Aliquam vel volutpat ante. Integer id tempor eros, at
          lobortis augue. Etiam ipsum mi, placerat eget urna at, placerat
          sodales lorem. Donec accumsan tempus justo at hendrerit. Donec varius
          venenatis molestie. Sed volutpat nunc lorem. Cras gravida vel ex at
          consectetur. Aliquam vel volutpat ante. Integer id tempor eros, at
          lobortis augue. Etiam ipsum mi, placerat eget urna at, placerat
          sodales lorem. Donec accumsan tempus justo m.</p>

          <p><a name='section 2'></a> Section 2</p> <p> Cras gravida vel ex at
          consectetur. Aliquam vel volutpat ante. Integer id tempor eros, at
          lobortis augue. Etiam ipsum mi, placerat eget urna at, placerat
          sodales lorem. Donec accumsan tempus justo at hendrerit. Donec varius
          venenatis molestie. Sed volutpat nunc lorem. Cras gravida vel ex at
          consectetur. Aliquam vel volutpat ante. Integer id tempor eros, at
          lobortis augue. Etiam ipsum mi, placerat eget urna at, placerat
          sodales lorem. Do.</p>

          <p><a name='section 3'></a> Section 3</p> <p> Cras gravida vel ex at
          consectetur. Aliquam vel volutpat ante. Integer id tempor eros, at
          lobortis augue. Etiam ipsum mi, placerat eget urna at, placerat
          sodales lorem. Donec accumsan tempus justo at hendrerit. Donec varius
          venenatis mo volutpat nunc lorem.</p>
  KBcontentAnchorSection:
    type: object
    properties:
      sectionName:
        type: string
      sectionLabel:
        type: string
  List-knowledgeBase:
    type: object
    properties:
      id:
        type: string
        format: UUID
      name:
        type: string
      content:
        type: string
        example: Some HTML from rich text
      startContent:
        type: boolean
      tag:
        $ref: '#/definitions/Tags'
  List-knowledgeBase-Trees:
    type: array
    items:
      $ref: '#/definitions/List-knowledgeBase-Tree'
    example:
      - id: 399c4f9a-b9eb-4df8-bab3-034d4ba5cd0b
        name: Require Infomation
        isLeaf: true
        parentId: ''
      - id: 0ed2af4c-087e-4bbf-8f0e-0d71bbd23941
        name: Payment Delay
        isLeaf: false
        parentId: ''
      - id: 085acb54-0a0d-4c8f-8ec7-ea2346d67d28
        name: System Require
        isLeaf: true
        parentId: ''
    xml:
      name: List-knowledgeBase-Trees
  List-knowledgeBase-Configure-Tree:
    type: object
    properties:
      id:
        type: string
        format: UUID
        example: ed3ea5ed-f08a-491c-8730-dec973a732cf
      name:
        type: string
        example: Payment
      status:
        type: string
      isLeaf:
        type: boolean
      children:
        type: array
        items:
          $ref: '#/definitions/List-knowledgeBase-Configure-Tree'
  List-knowledgeBase-Tree:
    type: object
    properties:
      id:
        type: string
        format: UUID
      name:
        type: string
      isLeaf:
        type: boolean
      parentId:
        type: string
        format: UUID
  KBTree:
    type: object
    properties:
      code:
        type: integer
        format: int32
      sectionName:
        type: string
        example: Payment Term
      content:
        type: string
        example: Some HTML from rich text
  List-Interaction-Accounts:
    type: array
    items:
      $ref: '#/definitions/List-Interaction-Account'
    example:
      - id: string
        name: string
        channelCode: EMAIL
        emailAddress: user@example.coma
        username: string
        password: string
        lineChannelSecret: string
        lineChannelAccessToken: string
        fbPageAccessToken: string
        fbVerityToken: string
        IncomingEmailServer: string
        IncomingEmailPort: 0
        protocol: string
        IncomingIsSsl: true
        outgoingEmailServer: string
        outgoingEmailPort: 0
        InOutSameAuth: true
        outgoingIsSsl: true
        outgoingNeedAuthen: true
        OutgoingUerName: string
        outgoingPassword: string1
      - id: string1
        name: string
        channelCode: EMAIL
        emailAddress: user@example.coma
        username: string
        password: string
        lineChannelSecret: string
        lineChannelAccessToken: string
        fbPageAccessToken: string
        fbVerityToken: string
        IncomingEmailServer: string
        IncomingEmailPort: 0
        protocol: string
        IncomingIsSsl: true
        outgoingEmailServer: string
        outgoingEmailPort: 0
        InOutSameAuth: true
        outgoingIsSsl: tru
        outgoingNeedAuthen: true
        OutgoingUerName: a
        outgoingPassword: '1212312121'
      - id: 02666dd3-8ab0-4411-9d8a-1f831ecf3dc0
        name: Line Account 1
        channelCode: LINE
        lineChannelSecret: fc97bb592dc7c05b11b68ac3b0f3b64e
        lineChannelAccessToken: >-
          xq2fmD8pq5YsWZzgfBmc30QLMj43ANmOlkR8Jux7MWYpwsXsUE4FaelECDOD73PJNBx9mUvVgDivfDQcmLwizgJLOf1FAaogTwLKv57PX4IXsS6t57boxQqgEMIAYkuuB95wJuX4hO432438hiIwdB04t89/1O/w1cDnyilFU=
      - id: 0fd43ad0-d4fa-4243-b59b-23e1bf465cd9
        name: Line Account 2
        channelCode: LINE
        lineChannelSecret: ec97bb592dc7c05b11b68ac3b0f3b64e
        lineChannelAccessToken: >-
          xq2fmD8pq5YsWZzgfBmc30QLMj43ANmOlkR8Jux7MWYpwsXsUE4FaelECDOD73PJNBx9mUvVgDivfDQcmLwizgJLOf1FAaogTwLKv57PX4IXsS6t57boxQqgEMIAYkuuB95wJuX4hOFz2xjcA8hiIwdB04t89/1O/w1cDnyilFU=
      - id: 02666dd3-8ab0-4411-9d8a-1f831ecf3dc2
        name: FB Account 1
        channelCode: FBMSG
        fbPageAccessToken: ec97bb59fdsb11b68ac3b0f3b64e
        fbVerityToken: >-
          xq2fmD8pq5YsWZzgfBmc30QLMj43ANmOfdsafdsafdsx9mUvVgDivfDQcmLwizgJLOf1FAaogTwLKv57PX4IXsS6t57boxQqgEMIAYkuuB95wJuX4hOFz2xjcA8hiIwdB04t89/1O/w1cDnyilFU=
      - id: 0fd43ad0-d4fa-4243-b59b-23e1bf465cd3
        name: FB Account 2
        channelCode: FBMSG
        fbPageAccessToken: ec97bb59fdsbfdsc3b0f3b64e
        fbVerityToken: >-
          xq2fmD8pq5YsWZzgfBmc30QLMj43ANmOlkR8Jux7MWYpwfdsafdsmUvVgDivfDQcmLwizgJLOf1FAaogTwLKv57PX4IXsS6t57boxQqgEMIAYkuuB95wJuX4hOFz2xjcA8hiIwdB04t89/1O/w1cDnyilFU=
  List-Interaction-Account:
    type: object
    properties:
      id:
        type: string
        format: UUID
      name:
        type: string
      channelCode:
        type: string
        enum:
          - EMAIL
          - PHONE
          - FBMSG
          - FB
          - LINE
          - PANTIP
          - IG
          - SMS
          - WHATSAPP
          - TWITTER
          - GOOGLEPLUS
      emailAddress:
        type: string
        format: email
        description: use for Channelcode = Emiail Only
      username:
        type: string
        description: use for Channelcode = Emiail Only
      password:
        type: string
        description: use for Channelcode = Emiail Only
      lineChannelSecret:
        type: string
        description: use for Channelcode = Line Only
      lineChannelAccessToken:
        type: string
        description: use for Channelcode = Line Only
      fbPageAccessToken:
        type: string
        description: use for Channelcode = FB Only
      fbVerityToken:
        type: string
        description: use for Channelcode = FB Only
      IncomingEmailServer:
        type: string
      IncomingEmailPort:
        type: integer
        format: int32
      protocol:
        type: string
      IncomingIsSsl:
        type: boolean
      outgoingEmailServer:
        type: string
      outgoingEmailPort:
        type: integer
        format: int32
      InOutSameAuth:
        type: boolean
      outgoingIsSsl:
        type: boolean
      outgoingNeedAuthen:
        type: boolean
      OutgoingUerName:
        type: string
      outgoingPassword:
        type: string
  knowledgeBaseComment:
    type: object
    properties:
      id:
        type: number
        example: 1
      knowledgeBaseId:
        type: string
        example: 83e78f41-36c1-4871-9943-339b48f97e89
      createDate:
        type: string
        example: '2018-07-31T07:28:00.543'
      createBy:
        type: string
        example: 6e4c0558-384f-4261-a191-3a20348d6434
      comment:
        type: string
        example: this is some comment from agent
      isRead:
        type: boolean
        example: true
  knowledgeBaseResponseMessage:
    type: object
    properties:
      id:
        type: number
        example: 1
      stage:
        type: string
        example: 'Stage Name '
      emailResponseMessage:
        type: string
        example: some html text
      chatResponseMessage:
        type: string
        example: some text message
      isDeleted:
        type: boolean
        example: false
      createDate:
        type: string
        example: '2018-07-31T07:28:00.543'
      createBy:
        type: string
        example: b7842ef0-0b39-423b-b6c4-765e71e72556
      updateDate:
        type: string
        example: '2018-07-31T07:28:00.543'
      updateBy:
        type: string
        example: b7842ef0-0b39-423b-b6c4-765e71e72556
      knowledgeBaseId:
        type: string
        example: 83e78f41-36c1-4871-9943-339b48f97e89
  LookUpItem:
    type: object
    properties:
      value:
        type: string
        example: '1'
      label:
        type: string
        example: relation_1
      hasDescription:
        type: boolean
        example: false
  DependencyItem:
    type: object
    properties:
      level:
        type: number
        example: 1
      label:
        type: string
        example: Case Type
      options:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              example: '1'
            label:
              type: string
              example: CaseType1
            isLeaf:
              type: boolean
              example: false
  InteractionAccount:
    type: object
    properties:
      id:
        type: number
        example: 0
      name:
        type: string
        example: ''
      channelCode:
        type: string
        example: ''
      emailAddress:
        type: string
        example: ''
      userName:
        type: string
        example: ''
      password:
        type: string
        example: ''
      authenToken:
        type: string
        example: ''
      lineChannelSecret:
        type: string
        example: ''
      lineChannelAccessToken:
        type: string
        example: ''
      fbPageAccessToken:
        type: string
        example: ''
      fbVerityToken:
        type: string
        example: ''
      fbAppSecret:
        type: string
        example: ''
      incomingEmailServer:
        type: string
        example: ''
      incomingEmailPort:
        type: number
        example: 0
      protocol:
        type: string
        example: ''
      incomingIsSsl:
        type: boolean
        example: false
      outgoingEmailServer:
        type: string
        example: ''
      outgoingEmailPort:
        type: number
        example: 0
      outgoingIsSsl:
        type: boolean
        example: false
      outgoingNeedAuthen:
        type: boolean
        example: false
      inOutSameAuth:
        type: boolean
        example: false
      outgoingUserName:
        type: string
        example: ''
      outgoingPassword:
        type: string
        example: ''
      createDate:
        type: string
        example: ''
      createBy:
        type: string
        example: ''
      updateDate:
        type: string
        example: ''
      updateBy:
        type: string
        example: ''
      enable:
        type: boolean
        example: false
      isDeleted:
        type: boolean
        example: false
      useDefaultRule:
        type: boolean
        example: false

  Severity:
    type: object
    properties: 
      id: 
        type: "number"
      code: 
        type: "string"
      name: 
        type: "string"
      description: 
        type: "string"
      seqNo: 
        type: "number"
      createDate: 
        type: "string"
      createBy: 
        type: "string"
      updateDate: 
        type: "string"
      updateBy: 
        type: "string"
      enable: 
        type: "boolean"
      isDeleted: 
        type: "boolean"
        
  SeverityPUT-POST:
    type: object
    properties: 
      code: 
        type: "string"
      name: 
        type: "string"
      description: 
        type: "string"
      seqNo: 
        type: "number"
      userId: 
        type: "string"
      enable: 
        type: "boolean"
      isDeleted: 
        type: "boolean"

  LookUpValueRelation:
    type: object
    properties:
      value:
        type: string
        example: other
      label:
        type: string
        example: อืนๆ โปรดระบุ
      hasDescription:
        type: boolean
        example: true
      description:
        type: string
        example: null
  LookUpValue: 
    type: object
    properties:
      value:
        type: string
        example: value1
      text:
        type: string
        example: Text1
      hasDescription:
        type: boolean
        example: false
      description:
        type: string
        example: null
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
